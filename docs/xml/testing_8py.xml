<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="testing_8py" kind="file" language="Python">
    <compoundname>testing.py</compoundname>
    <innernamespace refid="namespacecam">cam</innernamespace>
    <innernamespace refid="namespacecam_1_1testing">cam::testing</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacecam_1_1testing" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;BlenderCAM<sp/>&apos;testing.py&apos;<sp/>Â©<sp/>2012<sp/>Vilem<sp/>Novak</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">Functions<sp/>for<sp/>automated<sp/>testing.</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bpy</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.gcodepath<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>getPath</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.simple<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>activate</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespacecam_1_1testing_1abefbc28ec689156ed4a9c97b8303ae9e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1abefbc28ec689156ed4a9c97b8303ae9e" kindref="member">addTestCurve</ref>(loc):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.curve.primitive_bezier_circle_add(</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius=.05,<sp/>align=</highlight><highlight class="stringliteral">&apos;WORLD&apos;</highlight><highlight class="normal">,<sp/>enter_editmode=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>location=loc)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.editmode_toggle()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.curve.duplicate()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.transform.resize(value=(0.5,<sp/>0.5,<sp/>0.5),<sp/>constraint_axis=(</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orient_type=</highlight><highlight class="stringliteral">&apos;GLOBAL&apos;</highlight><highlight class="normal">,<sp/>mirror=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>use_proportional_edit=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proportional_edit_falloff=</highlight><highlight class="stringliteral">&apos;SMOOTH&apos;</highlight><highlight class="normal">,<sp/>proportional_size=1)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.curve.duplicate()</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.transform.resize(value=(0.5,<sp/>0.5,<sp/>0.5),<sp/>constraint_axis=(</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orient_type=</highlight><highlight class="stringliteral">&apos;GLOBAL&apos;</highlight><highlight class="normal">,<sp/>mirror=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>use_proportional_edit=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proportional_edit_falloff=</highlight><highlight class="stringliteral">&apos;SMOOTH&apos;</highlight><highlight class="normal">,<sp/>proportional_size=1)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.editmode_toggle()</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespacecam_1_1testing_1a6c48142744a3a292f57c78917845bf65" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1a6c48142744a3a292f57c78917845bf65" kindref="member">addTestMesh</ref>(loc):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.mesh.primitive_monkey_add(radius=.01,<sp/>align=</highlight><highlight class="stringliteral">&apos;WORLD&apos;</highlight><highlight class="normal">,<sp/>enter_editmode=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>location=loc)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.transform.rotate(value=-1.5708,<sp/>axis=(1,<sp/>0,<sp/>0),<sp/>constraint_axis=(</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orient_type=</highlight><highlight class="stringliteral">&apos;GLOBAL&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.transform_apply(location=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>rotation=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>scale=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.editmode_toggle()</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.mesh.primitive_plane_add(radius=1,<sp/>align=</highlight><highlight class="stringliteral">&apos;WORLD&apos;</highlight><highlight class="normal">,<sp/>enter_editmode=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>location=loc)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.transform.resize(value=(0.01,<sp/>0.01,<sp/>0.01),<sp/>constraint_axis=(</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orient_type=</highlight><highlight class="stringliteral">&apos;GLOBAL&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.transform.translate(value=(-0.01,<sp/>0,<sp/>0),<sp/>constraint_axis=(</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orient_type=</highlight><highlight class="stringliteral">&apos;GLOBAL&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.editmode_toggle()</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="namespacecam_1_1testing_1a5944e60b9d5d30759637782d98d8a106" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1a5944e60b9d5d30759637782d98d8a106" kindref="member">deleteFirstVert</ref>(ob):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>activate(ob)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.editmode_toggle()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.mesh.select_all(action=</highlight><highlight class="stringliteral">&apos;DESELECT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.editmode_toggle()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(ob.data.vertices):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.select<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.select<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ob.data.update()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.editmode_toggle()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.mesh.delete(type=</highlight><highlight class="stringliteral">&apos;VERT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.editmode_toggle()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="namespacecam_1_1testing_1abfb420269e3048d5cb9c771655592ff2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1abfb420269e3048d5cb9c771655592ff2" kindref="member">testCalc</ref>(o):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.calculate_cam_path()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1testing_1a5944e60b9d5d30759637782d98d8a106" kindref="member">deleteFirstVert</ref>(bpy.data.objects[o.name])</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="namespacecam_1_1testing_1a32a8eac2b8711a5eec30bcb2931dfeee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1a32a8eac2b8711a5eec30bcb2931dfeee" kindref="member">testCutout</ref>(pos):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1testing_1abefbc28ec689156ed4a9c97b8303ae9e" kindref="member">addTestCurve</ref>((pos[0],<sp/>pos[1],<sp/>-.05))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.scene.cam_operation_add()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/>bpy.context.scene.cam_operations[-1]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>o.strategy<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;CUTOUT&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1testing_1abfb420269e3048d5cb9c771655592ff2" kindref="member">testCalc</ref>(o)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="namespacecam_1_1testing_1a9e167aa24a8dbc55384f1e5535f2307b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1a9e167aa24a8dbc55384f1e5535f2307b" kindref="member">testPocket</ref>(pos):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1testing_1abefbc28ec689156ed4a9c97b8303ae9e" kindref="member">addTestCurve</ref>((pos[0],<sp/>pos[1],<sp/>-.01))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.scene.cam_operation_add()</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/>bpy.context.scene.cam_operations[-1]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>o.strategy<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;POCKET&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>o.movement.helix_enter<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>o.movement.retract_tangential<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1testing_1abfb420269e3048d5cb9c771655592ff2" kindref="member">testCalc</ref>(o)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="namespacecam_1_1testing_1adb2800c6463b497bc715098f86a82fe6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1adb2800c6463b497bc715098f86a82fe6" kindref="member">testParallel</ref>(pos):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1testing_1a6c48142744a3a292f57c78917845bf65" kindref="member">addTestMesh</ref>((pos[0],<sp/>pos[1],<sp/>-.02))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.scene.cam_operation_add()</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/>bpy.context.scene.cam_operations[-1]</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>o.ambient_behaviour<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;AROUND&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>o.material.radius_around_model<sp/>=<sp/>0.01</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.calculate_cam_path()</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="namespacecam_1_1testing_1aabd83e551ae9ee25bc26b7d6433b0b8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1aabd83e551ae9ee25bc26b7d6433b0b8d" kindref="member">testWaterline</ref>(pos):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1testing_1a6c48142744a3a292f57c78917845bf65" kindref="member">addTestMesh</ref>((pos[0],<sp/>pos[1],<sp/>-.02))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.scene.cam_operation_add()</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/>bpy.context.scene.cam_operations[-1]</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>o.strategy<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;WATERLINE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>o.optimisation.pixsize<sp/>=<sp/>.0002</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>o.ambient_behaviour=&apos;AROUND&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>o.material_radius_around_model=0.01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1testing_1abfb420269e3048d5cb9c771655592ff2" kindref="member">testCalc</ref>(o)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">#<sp/>bpy.ops.object.cam_simulate()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="namespacecam_1_1testing_1abc477b91c136f577f1e65b01888bb28f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1abc477b91c136f577f1e65b01888bb28f" kindref="member">testSimulation</ref>():</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="namespacecam_1_1testing_1a4d199c95e8a1f9840f62af73f6fe7079" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1a4d199c95e8a1f9840f62af73f6fe7079" kindref="member">cleanUp</ref>():</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.select_all(action=</highlight><highlight class="stringliteral">&apos;SELECT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.delete(use_global=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(bpy.context.scene.cam_operations):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpy.ops.scene.cam_operation_remove()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="namespacecam_1_1testing_1aabfb4b9616b91b5aa8176470e4d3e373" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1aabfb4b9616b91b5aa8176470e4d3e373" kindref="member">testOperation</ref>(i):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bpy.context.scene</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/>s.cam_operations[i]</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;testing<sp/>operation<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>o.name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>getPath(bpy.context,<sp/>o)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>newresult<sp/>=<sp/>bpy.data.objects[o.path_object_name]</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>origname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test_cam_path_&quot;</highlight><highlight class="normal"><sp/>+<sp/>o.name</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>origname<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>s.objects:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;Operation<sp/>Test<sp/>Has<sp/>Nothing<sp/>to<sp/>Compare<sp/>with,<sp/>Making<sp/>the<sp/>New<sp/>Result<sp/>as<sp/>Comparable<sp/>Result.\n\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newresult.name<sp/>=<sp/>origname</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testresult<sp/>=<sp/>bpy.data.objects[origname]</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1<sp/>=<sp/>testresult.data</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2<sp/>=<sp/>newresult.data</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_ok<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(m1.vertices)<sp/>!=<sp/>len(m2.vertices):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Vertex<sp/>Counts<sp/>Don&apos;t<sp/>Match\n\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_ok<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>different_co_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>len(m1.vertices)):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>m1.vertices[i]</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>m2.vertices[i]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v1.co<sp/>!=<sp/>v2.co:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>different_co_count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>different_co_count<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;Vertex<sp/>Position<sp/>Is<sp/>Different<sp/>on<sp/>%i<sp/>Vertices<sp/>\n\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(different_co_count)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_ok<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>test_ok:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;Test<sp/>Ok\n\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/></highlight><highlight class="stringliteral">&apos;Test<sp/>Result<sp/>Is<sp/>Different\n<sp/>\n<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>print(report)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>report</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="namespacecam_1_1testing_1a54beebb5016a1f115c1d079105334a3c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1testing_1a54beebb5016a1f115c1d079105334a3c" kindref="member">testAll</ref>():</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bpy.context.scene</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>report<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>len(s.cam_operations)):</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report<sp/>+=<sp/><ref refid="namespacecam_1_1testing_1aabfb4b9616b91b5aa8176470e4d3e373" kindref="member">testOperation</ref>(i)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>print(report)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="namespacecam_1_1testing_1ab2fef368ff6c023b0b221bfaf37d128f" refkind="member"><highlight class="normal">tests<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>testCutout,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>testParallel,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>testWaterline,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>testPocket,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">]</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="namespacecam_1_1testing_1a4d199c95e8a1f9840f62af73f6fe7079" kindref="member">cleanUp</ref>()</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">#<sp/>deleteFirstVert(bpy.context.active_object)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>t<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(tests):</highlight></codeline>
<codeline lineno="177" refid="namespacecam_1_1testing_1ad8987c50d27683e84c1613ea7cac0e81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>i<sp/>*<sp/>.2</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>t((p,<sp/>0,<sp/>0))</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>cleanUp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">#<sp/>cleanUp()</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/SpectralVectors/blendercam/scripts/addons/cam/testing.py"/>
  </compounddef>
</doxygen>
