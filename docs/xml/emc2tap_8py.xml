<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="emc2tap_8py" kind="file" language="Python">
    <compoundname>emc2tap.py</compoundname>
    <innerclass refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2" prot="public">cam::nc::emc2tap::CodesEMC2</innerclass>
    <innerclass refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap" prot="public">cam::nc::emc2tap::CreatorEMC2tap</innerclass>
    <innernamespace refid="namespacecam">cam</innernamespace>
    <innernamespace refid="namespacecam_1_1nc">cam::nc</innernamespace>
    <innernamespace refid="namespacecam_1_1nc_1_1emc2tap">cam::nc::emc2tap</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacecam_1_1nc_1_1emc2tap" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>nc</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>iso_codes</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>emc2</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2" kindref="compound">CodesEMC2</ref>(<ref refid="classcam_1_1nc_1_1iso__codes_1_1Codes" kindref="compound">iso_codes.Codes</ref>):</highlight></codeline>
<codeline lineno="7" refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2_1a6a0d71a1c6e9f8a80228dc220a0e57ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2_1a6a0d71a1c6e9f8a80228dc220a0e57ca" kindref="member">SPACE</ref>(self):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8" refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2_1ad5f0bde9799008c87b9f1fde8f21d2e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2_1ad5f0bde9799008c87b9f1fde8f21d2e7" kindref="member">TAP</ref>(self):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;G33.1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9" refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2_1a07cd9287c18407e5a96a7fedec58d8b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2_1a07cd9287c18407e5a96a7fedec58d8b0" kindref="member">TAP_DEPTH</ref>(self,<sp/>format,<sp/>depth):<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(self.<ref refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2_1a6a0d71a1c6e9f8a80228dc220a0e57ca" kindref="member">SPACE</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;K&apos;</highlight><highlight class="normal"><sp/>+<sp/>(format<sp/>%<sp/>depth))</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>version<sp/>of<sp/>COMMENT<sp/>removes<sp/>comments<sp/>from<sp/>the<sp/>resultant<sp/>GCode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#def<sp/>COMMENT(self,comment):<sp/>return(&apos;&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2_1a6bdff4d044a6addc86a820c6c1291551" refkind="member"><highlight class="normal">iso_codes.codes<sp/>=<sp/><ref refid="classcam_1_1nc_1_1emc2tap_1_1CodesEMC2" kindref="compound">CodesEMC2</ref>()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap" kindref="compound">CreatorEMC2tap</ref>(emc2.CreatorEMC2):</highlight></codeline>
<codeline lineno="19" refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1a42c82975653bd1c9b9623f32a747ebc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1a42c82975653bd1c9b9623f32a747ebc9" kindref="member">init</ref>(self):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iso.CreatorEMC2.init(self)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>G33.1<sp/>tapping<sp/>with<sp/>EMC<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>unsynchronized<sp/>(chuck)<sp/>taps<sp/>NIY<sp/>(tap_mode<sp/>=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1ae7c40089d2816698fbe6cfbc9a10a052" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1ae7c40089d2816698fbe6cfbc9a10a052" kindref="member">tap</ref>(self,<sp/>x=None,<sp/>y=None,<sp/>z=None,<sp/>zretract=None,<sp/>depth=None,<sp/>standoff=None,<sp/>dwell_bottom=None,<sp/>pitch=None,<sp/>stoppos=None,<sp/>spin_in=None,<sp/>spin_out=None,<sp/>tap_mode=None,<sp/>direction=None):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mystery<sp/>parameters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>zretract=None,<sp/>dwell_bottom=None,pitch=None,<sp/>stoppos=None,<sp/>spin_in=None,<sp/>spin_out=None):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>I<sp/>dont<sp/>see<sp/>how<sp/>to<sp/>map<sp/>these<sp/>to<sp/>EMC<sp/>Gcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(standoff<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>a<sp/>bad<sp/>thing.<sp/><sp/>All<sp/>the<sp/>drilling<sp/>cycles<sp/>need<sp/>a<sp/>retraction<sp/>(and<sp/>starting)<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>need<sp/>a<sp/>Z<sp/>value<sp/>as<sp/>well.<sp/><sp/>This<sp/>input<sp/>parameter<sp/>represents<sp/>the<sp/>top<sp/>of<sp/>the<sp/>hole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pitch<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>need<sp/>a<sp/>pitch<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>need<sp/>a<sp/>direction<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tap_mode<sp/>!=<sp/>0):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.comment(</highlight><highlight class="stringliteral">&apos;only<sp/>rigid<sp/>tapping<sp/>currently<sp/>supported&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write_preps()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write_blocknum()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write_spindle()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>rapid<sp/>to<sp/>starting<sp/>point;<sp/>z<sp/>first,<sp/>then<sp/>x,y<sp/>iff<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>the<sp/>retraction<sp/>point<sp/>to<sp/>the<sp/>&apos;standoff&apos;<sp/>distance<sp/>above<sp/>the<sp/>starting<sp/>z<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retract_height<sp/>=<sp/>z<sp/>+<sp/>standoff</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>unsure<sp/>if<sp/>this<sp/>is<sp/>needed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1ad673b94c6ffbf12e875ad3d0ebe5aa32" kindref="member">z</ref><sp/>!=<sp/>retract_height:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rapid(z=retract_height)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>then<sp/>continue<sp/>to<sp/>x,y<sp/>if<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(y<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write_blocknum()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write(iso_codes.codes.RAPID())</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write(iso_codes.codes.X()<sp/>+<sp/>(self.fmt<sp/>%<sp/>x))</highlight></codeline>
<codeline lineno="65" refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1a0a95c2b6ead575ec38a82a47c755c2dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1a0a95c2b6ead575ec38a82a47c755c2dd" kindref="member">x</ref><sp/>=<sp/>x</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write(iso_codes.codes.Y()<sp/>+<sp/>(self.fmt<sp/>%<sp/>y))</highlight></codeline>
<codeline lineno="69" refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1a400e22f2b1186bf5f0012fc795c4a5f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1a400e22f2b1186bf5f0012fc795c4a5f5" kindref="member">y</ref><sp/>=<sp/>y</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write_blocknum()</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write(iso_codes.codes.TAP())</highlight></codeline>
<codeline lineno="74" refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1ae6e14fd36a8672aa3e85a521f4a9150e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write(iso_codes.codes.TAP_DEPTH(self.<ref refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1ae6e14fd36a8672aa3e85a521f4a9150e" kindref="member">ffmt</ref>,<sp/>pitch)<sp/>+<sp/>iso_codes.codes.SPACE())</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>the<sp/>&apos;z&apos;<sp/>value<sp/>for<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>tap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write(iso_codes.codes.Z()<sp/>+<sp/>(self.fmt<sp/>%<sp/>(z<sp/>-<sp/>depth)))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write_misc()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1ad673b94c6ffbf12e875ad3d0ebe5aa32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1ad673b94c6ffbf12e875ad3d0ebe5aa32" kindref="member">z</ref><sp/>=<sp/>retract_height<sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>cycle<sp/>returns<sp/>to<sp/>the<sp/>start<sp/>position,<sp/>so<sp/>remember<sp/>that<sp/>as<sp/>z<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap_1a82ee32c552cb28af5ecb3aab5bb0b848" refkind="member"><highlight class="normal">nc.creator<sp/>=<sp/><ref refid="classcam_1_1nc_1_1emc2tap_1_1CreatorEMC2tap" kindref="compound">CreatorEMC2tap</ref>()</highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/SpectralVectors/blendercam/scripts/addons/cam/nc/emc2tap.py"/>
  </compounddef>
</doxygen>
