<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="basrelief_8py" kind="file" language="Python">
    <compoundname>basrelief.py</compoundname>
    <innerclass refid="classcam_1_1basrelief_1_1BasReliefsettings" prot="public">cam::basrelief::BasReliefsettings</innerclass>
    <innerclass refid="classcam_1_1basrelief_1_1BASRELIEF__Panel" prot="public">cam::basrelief::BASRELIEF_Panel</innerclass>
    <innerclass refid="classcam_1_1basrelief_1_1ReliefError" prot="public">cam::basrelief::ReliefError</innerclass>
    <innerclass refid="classcam_1_1basrelief_1_1DoBasRelief" prot="public">cam::basrelief::DoBasRelief</innerclass>
    <innerclass refid="classcam_1_1basrelief_1_1ProblemAreas" prot="public">cam::basrelief::ProblemAreas</innerclass>
    <innernamespace refid="namespacecam">cam</innernamespace>
    <innernamespace refid="namespacecam_1_1basrelief">cam::basrelief</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacecam_1_1basrelief" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;BlenderCAM<sp/>&apos;basrelief.py&apos;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">Module<sp/>to<sp/>allow<sp/>the<sp/>creation<sp/>of<sp/>reliefs<sp/>from<sp/>Images<sp/>or<sp/>View<sp/>Layers.</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">(https://en.wikipedia.org/wiki/Relief#Bas-relief_or_low_relief)</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>ceil,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>floor,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>sqrt</highlight></codeline>
<codeline lineno="11"><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bpy</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>bpy.props<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>BoolProperty,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>EnumProperty,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>FloatProperty,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>IntProperty,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>PointerProperty,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>StringProperty,</highlight></codeline>
<codeline lineno="25"><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>//<sp/>Full<sp/>Multigrid<sp/>Algorithm<sp/>for<sp/>solving<sp/>partial<sp/>differential<sp/>equations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/>//////////////////////////////////////////////////////////////////////</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#<sp/>MODYF<sp/>=<sp/>0<sp/>#/*<sp/>1<sp/>or<sp/>0<sp/>(1<sp/>is<sp/>better)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">#<sp/>MINS<sp/>=<sp/>16<sp/>#/*<sp/>minimum<sp/>size<sp/>4<sp/>6<sp/>or<sp/>100<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#<sp/>SMOOTH_IT<sp/>=<sp/>2<sp/>#/*<sp/>minimum<sp/>1<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#<sp/>V_CYCLE<sp/>=<sp/>10<sp/>#/*<sp/>number<sp/>of<sp/>v-cycles<sp/><sp/>2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#ITERATIONS<sp/>=<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">#<sp/>//<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespacecam_1_1basrelief_1ab0272ddc03e40911739051c6dcc54284" refkind="member"><highlight class="normal">EPS<sp/>=<sp/>1.0e-32</highlight></codeline>
<codeline lineno="41" refid="namespacecam_1_1basrelief_1ac779b0b524d86ee2fb8119cffebad256" refkind="member"><highlight class="normal">PRECISION<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="42" refid="namespacecam_1_1basrelief_1a7443029a28482631e23f3f081740ed55" refkind="member"><highlight class="normal">NUMPYALG<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">#<sp/>PLANAR_CONST=True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespacecam_1_1basrelief_1a479a5a367df382f5a4d97e5d27fbc319" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a479a5a367df382f5a4d97e5d27fbc319" kindref="member">copy_compbuf_data</ref>(inbuf,<sp/>outbuf):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>outbuf[:]<sp/>=<sp/>inbuf[:]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="namespacecam_1_1basrelief_1a9cee957b1946a898fae51b693337d1ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a9cee957b1946a898fae51b693337d1ce" kindref="member">restrictbuf</ref>(inbuf,<sp/>outbuf):<sp/><sp/></highlight><highlight class="comment">#<sp/>scale<sp/>down<sp/>array....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>inx<sp/>=<sp/>inbuf.shape[0]</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>iny<sp/>=<sp/>inbuf.shape[1]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>outx<sp/>=<sp/>outbuf.shape[0]</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>outy<sp/>=<sp/>outbuf.shape[1]</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>inx/outx</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>iny/outy</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>filterSize<sp/>=<sp/>0.5</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>xfiltersize<sp/>=<sp/>dx*filterSize</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>dy/2-0.5</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dx<sp/>==<sp/>2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>dy<sp/>==<sp/>2:<sp/><sp/></highlight><highlight class="comment">#<sp/>much<sp/>simpler<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>dx&lt;2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>restricted=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>num=restricted.shape[0]*restricted.shape[1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf[:]<sp/>=<sp/>(inbuf[::2,<sp/>::2]+inbuf[1::2,<sp/>::2]<sp/>+</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inbuf[::2,<sp/>1::2]+inbuf[1::2,<sp/>1::2])/4.0</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>NUMPYALG:<sp/><sp/></highlight><highlight class="comment">#<sp/>numpy<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yrange<sp/>=<sp/>numpy.arange(0,<sp/>outy)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xrange<sp/>=<sp/>numpy.arange(0,<sp/>outx)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>dx/2-0.5</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxrange<sp/>=<sp/>xrange*dx+sx</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syrange<sp/>=<sp/>yrange*dy+sy</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxstartrange<sp/>=<sp/>numpy.array(numpy.ceil(sxrange-xfiltersize),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxstartrange[sxstartrange<sp/>&lt;<sp/>0]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxendrange<sp/>=<sp/>numpy.array(numpy.floor(sxrange+xfiltersize)+1,<sp/>dtype=int)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxendrange[sxendrange<sp/>&gt;<sp/>inx]<sp/>=<sp/>inx</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systartrange<sp/>=<sp/>numpy.array(numpy.ceil(syrange-xfiltersize),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systartrange[systartrange<sp/>&lt;<sp/>0]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syendrange<sp/>=<sp/>numpy.array(numpy.floor(syrange+xfiltersize)+1,<sp/>dtype=int)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syendrange[syendrange<sp/>&gt;<sp/>iny]<sp/>=<sp/>iny</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#np.arange(8*6*3).reshape((8,<sp/>6,<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>3is<sp/>the<sp/>maximum<sp/>value...?pff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices<sp/>=<sp/>numpy.arange(outx*outy*2*3).reshape((2,<sp/>outx*outy,<sp/>3))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>sxendrange-sxstartrange</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[0]<sp/>=<sp/>sxstartrange.repeat(outy)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[1]<sp/>=<sp/>systartrange.repeat(outx).reshape(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outx,<sp/>outy).swapaxes(0,<sp/>1).flatten()</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>systartrange=numpy.max(0,numpy.ceil(syrange-xfiltersize))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>syendrange=numpy.min(numpy.floor(syrange+xfiltersize),iny-1)+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf.fill(0)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempbuf<sp/>=<sp/>inbuf[indices[0],<sp/>indices[1]]</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempbuf<sp/>+=<sp/>inbuf[indices[0]+1,<sp/>indices[1]]</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempbuf<sp/>+=<sp/>inbuf[indices[0],<sp/>indices[1]+1]</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempbuf<sp/>+=<sp/>inbuf[indices[0]+1,<sp/>indices[1]+1]</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempbuf<sp/>/=<sp/>4.0</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf[:]<sp/>=<sp/>tempbuf.reshape((outx,<sp/>outy))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>outbuf[:,:]=inbuf[]#inbuf[sxstartrange,systartrange]<sp/>#+<sp/>inbuf[sxstartrange+1,systartrange]<sp/>+<sp/>inbuf[sxstartrange,systartrange+1]<sp/>+<sp/>inbuf[sxstartrange+1,systartrange+1])/4.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">#<sp/>old<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>outy):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>dx/2-0.5</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>outx):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixVal<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ix<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(max(0,<sp/>ceil(sx-dx*filterSize)),<sp/>min(floor(sx+dx*filterSize),<sp/>inx-1)+1):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>iy<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(max(0,<sp/>ceil(sy-dx*filterSize)),<sp/>min(floor(sy+dx*filterSize),<sp/>iny-1)+1):</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixVal<sp/>+=<sp/>inbuf[ix,<sp/>iy]</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf[x,<sp/>y]<sp/>=<sp/>pixVal/w</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>+=<sp/>dx</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>+=<sp/>dy</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="namespacecam_1_1basrelief_1a9a1b6e682169add543f604f19092d632" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a9a1b6e682169add543f604f19092d632" kindref="member">prolongate</ref>(inbuf,<sp/>outbuf):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>inx<sp/>=<sp/>inbuf.shape[0]</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>iny<sp/>=<sp/>inbuf.shape[1]</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>outx<sp/>=<sp/>outbuf.shape[0]</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>outy<sp/>=<sp/>outbuf.shape[1]</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>inx/outx</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>iny/outy</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>filterSize<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>xfiltersize<sp/>=<sp/>dx*filterSize</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>outx[:]=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>outbuf.put(inbuf.repeat(4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dx<sp/>==<sp/>0.5<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>dy<sp/>==<sp/>0.5:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf[::2,<sp/>::2]<sp/>=<sp/>inbuf</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf[1::2,<sp/>::2]<sp/>=<sp/>inbuf</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf[::2,<sp/>1::2]<sp/>=<sp/>inbuf</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf[1::2,<sp/>1::2]<sp/>=<sp/>inbuf</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>x=inbuf::.flatten().repeat(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>NUMPYALG:<sp/><sp/></highlight><highlight class="comment">#<sp/>numpy<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>-dy/2</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>-dx/2</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xrange<sp/>=<sp/>numpy.arange(0,<sp/>outx)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yrange<sp/>=<sp/>numpy.arange(0,<sp/>outy)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxrange<sp/>=<sp/>xrange*dx+sx</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syrange<sp/>=<sp/>yrange*dy+sy</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxstartrange<sp/>=<sp/>numpy.array(numpy.ceil(sxrange-xfiltersize),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxstartrange[sxstartrange<sp/>&lt;<sp/>0]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxendrange<sp/>=<sp/>numpy.array(numpy.floor(sxrange+xfiltersize)+1,<sp/>dtype=int)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sxendrange[sxendrange<sp/>&gt;=<sp/>inx]<sp/>=<sp/>inx-1</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systartrange<sp/>=<sp/>numpy.array(numpy.ceil(syrange-xfiltersize),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>systartrange[systartrange<sp/>&lt;<sp/>0]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syendrange<sp/>=<sp/>numpy.array(numpy.floor(syrange+xfiltersize)+1,<sp/>dtype=int)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syendrange[syendrange<sp/>&gt;=<sp/>iny]<sp/>=<sp/>iny-1</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices<sp/>=<sp/>numpy.arange(outx*outy*2).reshape((2,<sp/>outx*outy))</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[0]<sp/>=<sp/>sxstartrange.repeat(outy)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[1]<sp/>=<sp/>systartrange.repeat(outx).reshape(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outx,<sp/>outy).swapaxes(0,<sp/>1).flatten()</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>systartrange=numpy.max(0,numpy.ceil(syrange-xfiltersize))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>syendrange=numpy.min(numpy.floor(syrange+xfiltersize),iny-1)+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>outbuf.fill(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempbuf<sp/>=<sp/>inbuf[indices[0],<sp/>indices[1]]</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>tempbuf+=inbuf[indices[0]+1,indices[1]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>tempbuf+=inbuf[indices[0],indices[1]+1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>tempbuf+=inbuf[indices[0]+1,indices[1]+1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempbuf<sp/>/=<sp/>4.0</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf[:]<sp/>=<sp/>tempbuf.reshape((outx,<sp/>outy))</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>outbuf.fill(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>outbuf[xrange,yrange]=inbuf[sxstartrange,systartrange]#<sp/>+<sp/>inbuf[sxendrange,systartrange]<sp/>+<sp/>inbuf[sxstartrange,syendrange]<sp/>+<sp/>inbuf[sxendrange,syendrange])/4.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>-dy/2</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>outy):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>-dx/2</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>outx):</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixVal<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ix<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(max(0,<sp/>ceil(sx-filterSize)),<sp/>min(floor(sx+filterSize),<sp/>inx-1)+1):</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>iy<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(max(0,<sp/>ceil(sy-filterSize)),<sp/>min(floor(sy+filterSize),<sp/>iny-1)+1):</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fx<sp/>=<sp/>abs(sx<sp/>-<sp/>ix)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fy<sp/>=<sp/>abs(sy<sp/>-<sp/>iy)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fval<sp/>=<sp/>(1-fx)*(1-fy)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixVal<sp/>+=<sp/>inbuf[ix,<sp/>iy]<sp/>*<sp/>fval</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/>+=<sp/>fval</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>weight==0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>print(&apos;error&apos;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outbuf[x,<sp/>y]<sp/>=<sp/>pixVal/weight</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>+=<sp/>dx</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>+=<sp/>dy</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="namespacecam_1_1basrelief_1a84845c220768cd5f4d97ea7af9ca3b4c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a84845c220768cd5f4d97ea7af9ca3b4c" kindref="member">idx</ref>(r,<sp/>c,<sp/>cols):</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r*cols+c+1</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">#<sp/>smooth<sp/>u<sp/>using<sp/>f<sp/>at<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="namespacecam_1_1basrelief_1ad911a47b6767f0bf2783a9bcf0e548ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1ad911a47b6767f0bf2783a9bcf0e548ef" kindref="member">smooth</ref>(U,<sp/>F,<sp/>linbcgiterations,<sp/>planar):</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>U.shape[1]</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>cols<sp/>=<sp/>U.shape[0]</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>U.size</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a7369a80f45ef2d8d836e195fc67ee148" kindref="member">linbcg</ref>(n,<sp/>F,<sp/>U,<sp/>2,<sp/>0.001,<sp/>linbcgiterations,<sp/>iter,<sp/>err,<sp/>rows,<sp/>cols,<sp/>planar)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="namespacecam_1_1basrelief_1aabd40958bb5e5febbc0e8a1fb76f2c54" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1aabd40958bb5e5febbc0e8a1fb76f2c54" kindref="member">calculate_defect</ref>(D,<sp/>U,<sp/>F):</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>F.shape[0]</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>F.shape[1]</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>1.0/sqrt(sx*sy*1.0)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>h2i<sp/>=<sp/>1.0/(h*h)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>h2i<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>D[1:-1,<sp/>1:-1]<sp/>=<sp/>F[1:-1,<sp/>1:-1]<sp/>-<sp/>U[:-2,<sp/>1:-1]<sp/>-<sp/>U[2:,<sp/>1:-1]<sp/>-<sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[1:-1,<sp/>:-2]<sp/>-<sp/>U[1:-1,<sp/>2:]<sp/>+<sp/>4*U[1:-1,<sp/>1:-1]</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>D[1:-1,<sp/>0]<sp/>=<sp/>F[1:-1,<sp/>0]<sp/>-<sp/>U[:-2,<sp/>0]<sp/>-<sp/>U[2:,<sp/>0]<sp/>-<sp/>U[1:-1,<sp/>1]<sp/>+<sp/>3*U[1:-1,<sp/>0]</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>D[1:-1,<sp/>-1]<sp/>=<sp/>F[1:-1,<sp/>-1]<sp/>-<sp/>U[:-2,<sp/>-1]<sp/>-<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[2:,<sp/>-1]<sp/>-<sp/>U[1:-1,<sp/>-2]<sp/>+<sp/>3*U[1:-1,<sp/>-1]</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>D[0,<sp/>1:-1]<sp/>=<sp/>F[0,<sp/>1:-1]<sp/>-<sp/>U[0,<sp/>:-2]<sp/>-<sp/>U[0,<sp/>:-2]<sp/>-<sp/>U[1,<sp/>1:-1]<sp/>+<sp/>3*U[0,<sp/>1:-1]</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>D[-1,<sp/>1:-1]<sp/>=<sp/>F[-1,<sp/>1:-1]<sp/>-<sp/>U[-1,<sp/>:-2]<sp/>-<sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U[-1,<sp/>:-2]<sp/>-<sp/>U[-1,<sp/>1:-1]<sp/>+<sp/>3*U[-1,<sp/>1:-1]</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>coners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>D[0,<sp/>0]<sp/>=<sp/>F[0,<sp/>0]<sp/>-<sp/>U[0,<sp/>1]<sp/>-<sp/>U[1,<sp/>0]<sp/>+<sp/>2*U[0,<sp/>0]</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>D[0,<sp/>-1]<sp/>=<sp/>F[0,<sp/>-1]<sp/>-<sp/>U[1,<sp/>-1]<sp/>-<sp/>U[0,<sp/>-2]<sp/>+<sp/>2*U[0,<sp/>-1]</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>D[-1,<sp/>0]<sp/>=<sp/>F[-1,<sp/>0]<sp/>-<sp/>U[-2,<sp/>0]<sp/>-<sp/>U[-1,<sp/>1]<sp/>+<sp/>2*U[-1,<sp/>0]</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>D[-1,<sp/>-1]<sp/>=<sp/>F[-1,<sp/>-1]<sp/>-<sp/>U[-2,<sp/>-1]<sp/>-<sp/>U[-1,<sp/>-2]<sp/>+<sp/>2*U[-1,<sp/>-1]</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>y<sp/>in<sp/>range(0,sy):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>for<sp/>x<sp/>in<sp/>range(0,sx):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>max(0,x-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>max(0,y-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>min(sx,<sp/>x+1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>min(sy,<sp/>y+1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>D[x,y]<sp/>=<sp/>F[x,y]<sp/>-(<sp/>U[e,y]<sp/>+<sp/>U[w,y]<sp/>+<sp/>U[x,n]<sp/>+<sp/>U[x,s]<sp/>-<sp/>4.0*U[x,y])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="namespacecam_1_1basrelief_1a9554e08aa23fcef890644aa887a681e9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a9554e08aa23fcef890644aa887a681e9" kindref="member">add_correction</ref>(U,<sp/>C):</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>U<sp/>+=<sp/>C</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">#<sp/>def<sp/>alloc_compbuf(xmax,ymax,pix,<sp/>1):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>ar=numpy.array()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="namespacecam_1_1basrelief_1a4cb6f56c1aa4d079ec817111a923c767" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a4cb6f56c1aa4d079ec817111a923c767" kindref="member">solve_pde_multigrid</ref>(F,<sp/>U,<sp/>vcycleiterations,<sp/>linbcgiterations,<sp/>smoothiterations,<sp/>mins,<sp/>levels,<sp/>useplanar,<sp/>planar):</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>F.shape[0]</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>F.shape[1]</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>int<sp/>i<sp/><sp/>#<sp/>index<sp/>for<sp/>simple<sp/>loops</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>int<sp/>k<sp/><sp/>#<sp/>index<sp/>for<sp/>iterating<sp/>through<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>int<sp/>k2<sp/>#<sp/>index<sp/>for<sp/>iterating<sp/>through<sp/>levels<sp/>in<sp/>V-cycles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1.<sp/>restrict<sp/>f<sp/>to<sp/>coarse-grid<sp/>(by<sp/>the<sp/>way<sp/>count<sp/>the<sp/>number<sp/>of<sp/>levels)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>k=0:<sp/>fine-grid<sp/>=<sp/>f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>k=levels:<sp/>coarsest-grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pix<sp/>=<sp/>CB_VAL#what<sp/>is<sp/>this&gt;???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>int<sp/>cycle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>int<sp/>sx,<sp/>sy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>RHS<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>IU<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>VF<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>PLANAR<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>levels+1):</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RHS.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IU.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VF.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PLANAR.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>VF[0]<sp/>=<sp/>numpy.zeros((xmax,<sp/>ymax),<sp/>dtype=numpy.float64)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>numpy.fill(pix)!?<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>RHS[0]<sp/>=<sp/>F.copy()</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>IU[0]<sp/>=<sp/>U.copy()</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>PLANAR[0]<sp/>=<sp/>planar.copy()</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>xmax</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>ymax</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(planar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>levels):</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>calculate<sp/>size<sp/>of<sp/>next<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>int(sx/2)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sy<sp/>=<sp/>int(sy/2)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PLANAR[k+1]<sp/>=<sp/>numpy.zeros((sx,<sp/>sy),<sp/>dtype=numpy.float64)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RHS[k+1]<sp/>=<sp/>numpy.zeros((sx,<sp/>sy),<sp/>dtype=numpy.float64)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IU[k+1]<sp/>=<sp/>numpy.zeros((sx,<sp/>sy),<sp/>dtype=numpy.float64)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VF[k+1]<sp/>=<sp/>numpy.zeros((sx,<sp/>sy),<sp/>dtype=numpy.float64)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>restrict<sp/>from<sp/>level<sp/>k<sp/>to<sp/>level<sp/>k+1<sp/>(coarser-grid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a9cee957b1946a898fae51b693337d1ce" kindref="member">restrictbuf</ref>(PLANAR[k],<sp/>PLANAR[k+1])</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PLANAR[k+1]<sp/>=<sp/>PLANAR[k+1]<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>numpytoimage(PLANAR[k+1],&apos;planar&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(PLANAR[k+1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a9cee957b1946a898fae51b693337d1ce" kindref="member">restrictbuf</ref>(RHS[k],<sp/>RHS[k+1])</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>numpytoimage(RHS[k+1],&apos;rhs&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>2.<sp/>find<sp/>exact<sp/>sollution<sp/>at<sp/>the<sp/>coarsest-grid<sp/>(k=levels)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>was<sp/>replaced<sp/>to<sp/>easify<sp/>code.<sp/>exact_sollution(<sp/>RHS[levels],<sp/>IU[levels]<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>IU[levels].fill(0.0)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>3.<sp/>nested<sp/>iterations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(levels-1,<sp/>-1,<sp/>-1):</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;K:&apos;</highlight><highlight class="normal">,<sp/>str(k))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>4.<sp/>interpolate<sp/>sollution<sp/>from<sp/>last<sp/>coarse-grid<sp/>to<sp/>finer-grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>interpolate<sp/>from<sp/>level<sp/>k+1<sp/>to<sp/>level<sp/>k<sp/>(finer-grid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a9a1b6e682169add543f604f19092d632" kindref="member">prolongate</ref>(IU[k+1],<sp/>IU[k])</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&apos;k&apos;,k)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>4.1.<sp/>first<sp/>target<sp/>function<sp/>is<sp/>the<sp/>equation<sp/>target<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>(following<sp/>target<sp/>functions<sp/>are<sp/>the<sp/>defect)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a479a5a367df382f5a4d97e5d27fbc319" kindref="member">copy_compbuf_data</ref>(RHS[k],<sp/>VF[k])</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;lanar<sp/>&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>5.<sp/>V-cycle<sp/>(twice<sp/>repeated)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cycle<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>vcycleiterations):</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;v-cycle<sp/>iteration:&apos;</highlight><highlight class="normal">,<sp/>str(cycle))</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>6.<sp/>downward<sp/>stroke<sp/>of<sp/>V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(k,<sp/>levels):</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>7.<sp/>pre-smoothing<sp/>of<sp/>initial<sp/>sollution<sp/>using<sp/>target<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>zero<sp/>for<sp/>initial<sp/>guess<sp/>at<sp/>smoothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>(except<sp/>for<sp/>level<sp/>k<sp/>when<sp/>iu<sp/>contains<sp/>prolongated<sp/>result)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(k2<sp/>!=<sp/>k):</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IU[k2].fill(0.0)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>smoothiterations):</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1ad911a47b6767f0bf2783a9bcf0e548ef" kindref="member">smooth</ref>(IU[k2],<sp/>VF[k2],<sp/>linbcgiterations,<sp/>PLANAR[k2])</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>8.<sp/>calculate<sp/>defect<sp/>at<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>d[k2]<sp/>=<sp/>Lh<sp/>*<sp/>~u[k2]<sp/>-<sp/>f[k2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>=<sp/>numpy.zeros_like(IU[k2])</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>k2==0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>IU[k2][planar[k2]]=IU[k2].max()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(IU[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>useplanar<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>k2<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IU[k2][PLANAR[k2]]<sp/>=<sp/>IU[k2].min()</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>k2==0<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>VF[k2][PLANAR[k2]]=0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>print(IU[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1aabd40958bb5e5febbc0e8a1fb76f2c54" kindref="member">calculate_defect</ref>(D,<sp/>IU[k2],<sp/>VF[k2])</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>9.<sp/>restrict<sp/>deffect<sp/>as<sp/>target<sp/>function<sp/>for<sp/>next<sp/>coarser-grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>def<sp/>-&gt;<sp/>f[k2+1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a9cee957b1946a898fae51b693337d1ce" kindref="member">restrictbuf</ref>(D,<sp/>VF[k2+1])</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>10.<sp/>solve<sp/>on<sp/>coarsest-grid<sp/>(target<sp/>function<sp/>is<sp/>the<sp/>deffect)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>iu[levels]<sp/>should<sp/>contain<sp/>sollution<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>the<sp/>f[levels]<sp/>-<sp/>last<sp/>deffect,<sp/>iu<sp/>will<sp/>now<sp/>be<sp/>the<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IU[levels].fill(0.0)<sp/><sp/></highlight><highlight class="comment">#<sp/>exact_sollution(VF[levels],<sp/>IU[levels]<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>11.<sp/>upward<sp/>stroke<sp/>of<sp/>V</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(levels-1,<sp/>k-1,<sp/>-1):</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;k2:<sp/>&apos;</highlight><highlight class="normal">,<sp/>str(k2))</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>12.<sp/>interpolate<sp/>correction<sp/>from<sp/>last<sp/>coarser-grid<sp/>to<sp/>finer-grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>iu[k2+1]<sp/>-&gt;<sp/>cor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>numpy.zeros_like(IU[k2])</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a9a1b6e682169add543f604f19092d632" kindref="member">prolongate</ref>(IU[k2+1],<sp/>C)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>13.<sp/>add<sp/>interpolated<sp/>correction<sp/>to<sp/>initial<sp/>sollution<sp/>at<sp/>level<sp/>k2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a9554e08aa23fcef890644aa887a681e9" kindref="member">add_correction</ref>(IU[k2],<sp/>C)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>14.<sp/>post-smoothing<sp/>of<sp/>current<sp/>sollution<sp/>using<sp/>target<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>smoothiterations):</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1ad911a47b6767f0bf2783a9bcf0e548ef" kindref="member">smooth</ref>(IU[k2],<sp/>VF[k2],<sp/>linbcgiterations,<sp/>PLANAR[k2])</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>useplanar<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>k2<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IU[0][planar]<sp/>=<sp/>IU[0].min()</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(IU[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>---<sp/>end<sp/>of<sp/>V-cycle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>---<sp/>end<sp/>of<sp/>nested<sp/>iteration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>15.<sp/>final<sp/>sollution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>IU[0]<sp/>contains<sp/>the<sp/>final<sp/>sollution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>U[:]<sp/>=<sp/>IU[0]</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="namespacecam_1_1basrelief_1a822964708e515d6bdd72592d1b8e34a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a822964708e515d6bdd72592d1b8e34a6" kindref="member">asolve</ref>(b,<sp/>x):</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>x[:]<sp/>=<sp/>-4*b</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="namespacecam_1_1basrelief_1ac14b2661328ff1f3816c445ebfbca188" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1ac14b2661328ff1f3816c445ebfbca188" kindref="member">atimes</ref>(x,<sp/>res):</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>res[1:-1,<sp/>1:-1]<sp/>=<sp/>x[:-2,<sp/>1:-1]+x[2:,<sp/>1:-1]<sp/>+<sp/>\</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[1:-1,<sp/>:-2]+x[1:-1,<sp/>2:]<sp/>-<sp/>4*x[1:-1,<sp/>1:-1]</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>res[1:-1,<sp/>0]<sp/>=<sp/>x[0:-2,<sp/>0]+x[2:,<sp/>0]+x[1:-1,<sp/>1]<sp/>-<sp/>3*x[1:-1,<sp/>0]</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>res[1:-1,<sp/>-1]<sp/>=<sp/>x[0:-2,<sp/>-1]+x[2:,<sp/>-1]+x[1:-1,<sp/>-2]<sp/>-<sp/>3*x[1:-1,<sp/>-1]</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>res[0,<sp/>1:-1]<sp/>=<sp/>x[0,<sp/>:-2]<sp/>+<sp/>x[0,<sp/>2:]<sp/>+<sp/>x[1,<sp/>1:-1]<sp/>-<sp/>3*x[0,<sp/>1:-1]</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>res[-1,<sp/>1:-1]<sp/>=<sp/>x[-1,<sp/>:-2]<sp/>+<sp/>x[-1,<sp/>2:]<sp/>+<sp/>x[-2,<sp/>1:-1]<sp/>-<sp/>3*x[-1,<sp/>1:-1]</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>corners</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>res[0,<sp/>0]<sp/>=<sp/>x[1,<sp/>0]+x[0,<sp/>1]-2*x[0,<sp/>0]</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>res[-1,<sp/>0]<sp/>=<sp/>x[-2,<sp/>0]+x[-1,<sp/>1]-2*x[-1,<sp/>0]</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>res[0,<sp/>-1]<sp/>=<sp/>x[0,<sp/>-2]+x[1,<sp/>-1]-2*x[0,<sp/>-1]</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>res[-1,<sp/>-1]<sp/>=<sp/>x[-1,<sp/>-2]+x[-2,<sp/>-1]-2*x[-1,<sp/>-1]</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" kindref="member">snrm</ref>(n,<sp/>sx,<sp/>itol):</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itol<sp/>&lt;=<sp/>3):</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>sx*sx</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>=<sp/>temp.sum()</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(ans)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>numpy.abs(sx)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp.max()</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">#<sp/>/**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">#<sp/>*<sp/>Biconjugate<sp/>Gradient<sp/>Method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">#<sp/>*<sp/>from<sp/>Numerical<sp/>Recipes<sp/>in<sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">#<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="namespacecam_1_1basrelief_1a7369a80f45ef2d8d836e195fc67ee148" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a7369a80f45ef2d8d836e195fc67ee148" kindref="member">linbcg</ref>(n,<sp/>b,<sp/>x,<sp/>itol,<sp/>tol,<sp/>itmax,<sp/>iter,<sp/>err,<sp/>rows,<sp/>cols,<sp/>planar):</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>numpy.zeros((cols,<sp/>rows))</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>pp<sp/>=<sp/>numpy.zeros((cols,<sp/>rows))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>numpy.zeros((cols,<sp/>rows))</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>rr<sp/>=<sp/>numpy.zeros((cols,<sp/>rows))</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>=<sp/>numpy.zeros((cols,<sp/>rows))</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>zz<sp/>=<sp/>numpy.zeros((cols,<sp/>rows))</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1ac14b2661328ff1f3816c445ebfbca188" kindref="member">atimes</ref>(x,<sp/>r)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>r[:]<sp/>=<sp/>b-r</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>rr[:]<sp/>=<sp/>r</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1ac14b2661328ff1f3816c445ebfbca188" kindref="member">atimes</ref>(r,<sp/>rr)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>minimum<sp/>residual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>znrm<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itol<sp/>==<sp/>1):</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnrm<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" kindref="member">snrm</ref>(n,<sp/>b,<sp/>itol)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(itol<sp/>==<sp/>2):</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a822964708e515d6bdd72592d1b8e34a6" kindref="member">asolve</ref>(b,<sp/>z)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnrm<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" kindref="member">snrm</ref>(n,<sp/>z,<sp/>itol)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(itol<sp/>==<sp/>3<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>itol<sp/>==<sp/>4):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a822964708e515d6bdd72592d1b8e34a6" kindref="member">asolve</ref>(b,<sp/>z)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bnrm<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" kindref="member">snrm</ref>(n,<sp/>z,<sp/>itol)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a822964708e515d6bdd72592d1b8e34a6" kindref="member">asolve</ref>(r,<sp/>z)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>znrm<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" kindref="member">snrm</ref>(n,<sp/>z,<sp/>itol)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;illegal<sp/>itol<sp/>in<sp/>linbcg&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a822964708e515d6bdd72592d1b8e34a6" kindref="member">asolve</ref>(r,<sp/>z)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>&lt;=<sp/>itmax):</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;linbcg<sp/>iteration:&apos;,<sp/>str(iter))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zm1nrm<sp/>=<sp/>znrm</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a822964708e515d6bdd72592d1b8e34a6" kindref="member">asolve</ref>(rr,<sp/>zz)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bknum<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>z*rr</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bknum<sp/>=<sp/>temp.sum()<sp/><sp/></highlight><highlight class="comment">#<sp/>-z[0]*rr[0]????</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/>1):</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[:]<sp/>=<sp/>z</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp[:]<sp/>=<sp/>zz</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bk<sp/>=<sp/>bknum/bkden</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>bk*p+z</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/>=<sp/>bk*pp+zz</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bkden<sp/>=<sp/>bknum</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1ac14b2661328ff1f3816c445ebfbca188" kindref="member">atimes</ref>(p,<sp/>z)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>z*pp</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>akden<sp/>=<sp/>temp.sum()</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ak<sp/>=<sp/>bknum/akden</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1ac14b2661328ff1f3816c445ebfbca188" kindref="member">atimes</ref>(pp,<sp/>zz)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>ak*p</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>-=<sp/>ak*z</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rr<sp/>-=<sp/>ak*zz</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a822964708e515d6bdd72592d1b8e34a6" kindref="member">asolve</ref>(r,<sp/>z)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itol<sp/>==<sp/>1<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>itol<sp/>==<sp/>2):</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>znrm<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" kindref="member">snrm</ref>(n,<sp/>r,<sp/>itol)/bnrm</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(itol<sp/>==<sp/>3<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>itol<sp/>==<sp/>4):</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>znrm<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" kindref="member">snrm</ref>(n,<sp/>z,<sp/>itol)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(zm1nrm-znrm)<sp/>&gt;<sp/>EPS*znrm):</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dxnrm<sp/>=<sp/>abs(ak)*<ref refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" kindref="member">snrm</ref>(n,<sp/>p,<sp/>itol)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>znrm/abs(zm1nrm-znrm)*dxnrm</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>znrm/bnrm</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xnrm<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a6c50cb05df82a36b700aa844163dd7da" kindref="member">snrm</ref>(n,<sp/>x,<sp/>itol)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;=<sp/>0.5*xnrm):</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>/=<sp/>xnrm</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>znrm/bnrm</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;=<sp/>tol):</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>PLANAR_CONST<sp/>and<sp/>planar.shape==rr.shape:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>x[planar]=0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">#<sp/>--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="namespacecam_1_1basrelief_1a8d2a86f24138ce2779205fdd81f1a4c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a8d2a86f24138ce2779205fdd81f1a4c1" kindref="member">numpysave</ref>(a,<sp/>iname):</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>inamebase<sp/>=<sp/>bpy.path.basename(iname)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a89cc1c47da537f47ed2cc5c3461b7e00" kindref="member">numpytoimage</ref>(a,<sp/>inamebase)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>bpy.context.scene.render</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>r.image_settings.file_format<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;OPEN_EXR&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>r.image_settings.color_mode<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;BW&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>r.image_settings.color_depth<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;32&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>i.save_render(iname)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="namespacecam_1_1basrelief_1a89cc1c47da537f47ed2cc5c3461b7e00" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a89cc1c47da537f47ed2cc5c3461b7e00" kindref="member">numpytoimage</ref>(a,<sp/>iname):</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Numpy<sp/>to<sp/>Image<sp/>-<sp/>Here&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>print(a.shape[0],<sp/>a.shape[1])</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>foundimage<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>image<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bpy.data.images:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>image.name[:len(iname)]<sp/>==<sp/>iname<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>image.size[0]<sp/>==<sp/>a.shape[0]<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>image.size[1]<sp/>==<sp/>a.shape[1]:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>image</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundimage<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>foundimage:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpy.ops.image.new(name=iname,<sp/>width=a.shape[0],<sp/>height=a.shape[1],<sp/>color=(</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>1),<sp/>alpha=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>generated_type=</highlight><highlight class="stringliteral">&apos;BLANK&apos;</highlight><highlight class="normal">,<sp/>float=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>image<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bpy.data.images:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>image.name[:len(iname)]<sp/>==<sp/>iname<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>image.size[0]<sp/>==<sp/>a.shape[0]<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>image.size[1]<sp/>==<sp/>a.shape[1]:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>image</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>a.shape[0]*a.shape[1]</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>a.swapaxes(0,<sp/>1)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>a.reshape(d)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>a.repeat(4)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>a[3::4]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>i.pixels=a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>i.pixels[:]<sp/>=<sp/>a[:]<sp/><sp/></highlight><highlight class="comment">#<sp/>this<sp/>gives<sp/>big<sp/>speedup!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;\ntime<sp/>&apos;</highlight><highlight class="normal">+str(time.time()-t))</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="namespacecam_1_1basrelief_1a30e8d0f83e5e0e575e556a4ab0512c16" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a30e8d0f83e5e0e575e556a4ab0512c16" kindref="member">imagetonumpy</ref>(i):</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>inc<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>i.size[0]</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>height<sp/>=<sp/>i.size[1]</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>na<sp/>=<sp/>numpy.array((0.1),<sp/>dtype=float64)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>width*height</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>na.resize(size*4)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>these<sp/>2<sp/>lines<sp/>are<sp/>about<sp/>15%<sp/>faster<sp/>than<sp/>na=i.pixels[:]....<sp/>whyyyyyyyy!!?!?!?!?!<sp/>Blender<sp/>image<sp/>data<sp/>access<sp/>is<sp/>evil.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>i.pixels[:]</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>na[:]<sp/>=<sp/>p</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>na=numpy.array(i.pixels[:])#this<sp/>was<sp/>terribly<sp/>slow...<sp/>at<sp/>least<sp/>I<sp/>know<sp/>why<sp/>now,<sp/>it<sp/>probably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>na<sp/>=<sp/>na[::4]</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>na<sp/>=<sp/>na.reshape(height,<sp/>width)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>na<sp/>=<sp/>na.swapaxes(0,<sp/>1)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;\ntime<sp/>of<sp/>image<sp/>to<sp/>numpy<sp/>&apos;</highlight><highlight class="normal">+str(time.time()-t))</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>na</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="namespacecam_1_1basrelief_1a42f76d02a7449fbb2db6092b6dd7c708" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a42f76d02a7449fbb2db6092b6dd7c708" kindref="member">tonemap</ref>(i,<sp/>exponent):</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>depth<sp/>buffer<sp/>never<sp/>got<sp/>written<sp/>it<sp/>gets<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>a<sp/>great<sp/>big<sp/>value<sp/>(10000000000.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>filter<sp/>out<sp/>anything<sp/>within<sp/>an<sp/>order<sp/>of<sp/>magnitude<sp/>of<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>so<sp/>we<sp/>only<sp/>have<sp/>things<sp/>that<sp/>are<sp/>actually<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>maxheight<sp/>=<sp/>i.max(where=i<sp/>&lt;<sp/>1000000000.0,<sp/>initial=0)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>minheight<sp/>=<sp/>i.min()</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>i[:]<sp/>=<sp/>numpy.clip(i,<sp/>minheight,<sp/>maxheight)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>i[:]<sp/>=<sp/>((i-minheight))/(maxheight-minheight)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>i[:]<sp/>**=<sp/>exponent</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="namespacecam_1_1basrelief_1a81d6fa58c4adc2b85ee592515995c256" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a81d6fa58c4adc2b85ee592515995c256" kindref="member">vert</ref>(column,<sp/>row,<sp/>z,<sp/>XYscaling,<sp/>Zscaling):</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Create<sp/>a<sp/>Single<sp/>Vert<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>column<sp/>*<sp/>XYscaling,<sp/>row<sp/>*<sp/>XYscaling,<sp/>z<sp/>*<sp/>Zscaling</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="namespacecam_1_1basrelief_1a226bc6d169e18fc244218469ede9b91b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a226bc6d169e18fc244218469ede9b91b" kindref="member">buildMesh</ref>(mesh_z,<sp/>br):</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>rows</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>size</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>scalez<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>decimateRatio<sp/>=<sp/>br.decimate_ratio<sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>variable<sp/>from<sp/>interactive<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.select_all(action=</highlight><highlight class="stringliteral">&apos;DESELECT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>object<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bpy.data.objects:</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">&quot;BasReliefMesh&quot;</highlight><highlight class="normal">,<sp/>str(object)):</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpy.data.objects.remove(object)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;old<sp/>basrelief<sp/>removed&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Building<sp/>Mesh&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>numY<sp/>=<sp/>mesh_z.shape[1]</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>numX<sp/>=<sp/>mesh_z.shape[0]</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>print(numX,<sp/>numY)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>verts<sp/>=<sp/>list()</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>faces<sp/>=<sp/>list()</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>row<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(mesh_z):</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j,<sp/>col<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(row):</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verts.append(<ref refid="namespacecam_1_1basrelief_1a81d6fa58c4adc2b85ee592515995c256" kindref="member">vert</ref>(i,<sp/>j,<sp/>col,<sp/>scale,<sp/>scalez))</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>numY<sp/>*<sp/>(numX-1)):</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>count<sp/>&lt;<sp/>numY-1:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>i<sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>first<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>=<sp/>i+1<sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>second<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>(i+numY)+1<sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>third<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>=<sp/>(i+numY)<sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>fourth<sp/>vertex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face<sp/>=<sp/>(A,<sp/>B,<sp/>C,<sp/>D)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>faces.append(face)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>count<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>Mesh<sp/>Datablock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh<sp/>=<sp/>bpy.data.meshes.new(</highlight><highlight class="stringliteral">&quot;displacement&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.from_pydata(verts,<sp/>[],<sp/>faces)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.update()</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>object<sp/>from<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>new_object<sp/>=<sp/>bpy.data.objects.new(</highlight><highlight class="stringliteral">&apos;BasReliefMesh&apos;</highlight><highlight class="normal">,<sp/>mesh)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>scene<sp/>=<sp/>bpy.context.scene</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>scene.collection.objects.link(new_object)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mesh<sp/>object<sp/>is<sp/>made<sp/>-<sp/>preparing<sp/>to<sp/>decimate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>ob<sp/>=<sp/>bpy.data.objects[</highlight><highlight class="stringliteral">&apos;BasReliefMesh&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>ob.select_set(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.context.view_layer.objects.active<sp/>=<sp/>ob</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.context.active_object.dimensions<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.widthmm/1000,<sp/>br.heightmm/1000,<sp/>br.thicknessmm/1000)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.context.active_object.location<sp/>=<sp/>(float(</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.justifyx)*br.widthmm/1000,<sp/>float(br.justifyy)*br.heightmm/1000,<sp/>float(br.justifyz)*br.thicknessmm/1000)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Faces:&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ob.data.polygons)))</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Vertices:&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ob.data.vertices)))</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>decimateRatio<sp/>&gt;<sp/>0.95:</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>Decimate<sp/>Ratio<sp/>&gt;<sp/>0.95&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ob.modifiers.new(name=</highlight><highlight class="stringliteral">&quot;Foo&quot;</highlight><highlight class="normal">,<sp/>type=</highlight><highlight class="stringliteral">&apos;DECIMATE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.ratio<sp/>=<sp/>decimateRatio</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Decimating<sp/>with<sp/>Ratio:&quot;</highlight><highlight class="normal">+str(decimateRatio))</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpy.ops.object.modifier_apply(modifier=m.name)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Decimated&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Faces:&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ob.data.polygons)))</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Vertices:&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(len(ob.data.vertices)))</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Switches<sp/>to<sp/>cycles<sp/>render<sp/>to<sp/>CYCLES<sp/>to<sp/>render<sp/>the<sp/>sceen<sp/>then<sp/>switches<sp/>it<sp/>back<sp/>to<sp/>BLENDERCAM_RENDER<sp/>for<sp/>basRelief</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712" refid="namespacecam_1_1basrelief_1af116eedd1395f73209312d186e0a14d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1af116eedd1395f73209312d186e0a14d2" kindref="member">renderScene</ref>(width,<sp/>height,<sp/>bit_diameter,<sp/>passes_per_radius,<sp/>make_nodes,<sp/>view_layer):</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Rendering<sp/>Scene&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>scene<sp/>=<sp/>bpy.context.scene</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>sure<sp/>we&apos;re<sp/>in<sp/>object<sp/>mode<sp/>or<sp/>else<sp/>bad<sp/>things<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bpy.context.active_object:</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpy.ops.object.mode_set(mode=</highlight><highlight class="stringliteral">&apos;OBJECT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>scene.render.engine<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;CYCLES&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>our_viewer<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>our_renderer<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>make_nodes:</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>depth<sp/>render<sp/>node<sp/>and<sp/>viewer<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>scene.use_nodes<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene.use_nodes<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_tree<sp/>=<sp/>scene.node_tree</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes<sp/>=<sp/>node_tree.nodes</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>our_viewer<sp/>=<sp/>node_tree.nodes.new(type=</highlight><highlight class="stringliteral">&apos;CompositorNodeViewer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>our_viewer.label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CAM_basrelief_viewer&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>our_renderer<sp/>=<sp/>node_tree.nodes.new(type=</highlight><highlight class="stringliteral">&apos;CompositorNodeRLayers&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>our_renderer.label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CAM_basrelief_renderlayers&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>our_renderer.layer<sp/>=<sp/>view_layer</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_tree.links.new(our_renderer.outputs[our_renderer.outputs.find(</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Depth&apos;</highlight><highlight class="normal">)],<sp/>our_viewer.inputs[our_viewer.inputs.find(</highlight><highlight class="stringliteral">&quot;Image&quot;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene.view_layers[view_layer].use_pass_z<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>set<sp/>our<sp/>viewer<sp/>as<sp/>active<sp/>so<sp/>that<sp/>it<sp/>is<sp/>what<sp/>gets<sp/>rendered<sp/>to<sp/>viewer<sp/>node<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.active<sp/>=<sp/>our_viewer</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>render<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>passes<sp/>=<sp/>bit_diameter/(2*passes_per_radius)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>round(width/passes)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>round(height/passes)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>print(x,<sp/>y,<sp/>passes)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>scene.render.resolution_x<sp/>=<sp/>x</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>scene.render.resolution_y<sp/>=<sp/>y</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>scene.render.resolution_percentage<sp/>=<sp/>100</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.render.render(animation=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>write_still=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_viewport=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>layer=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>scene=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>our_renderer<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.remove(our_renderer)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>our_viewer<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.remove(our_viewer)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.context.scene.render.engine<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;CNCCAM_RENDER&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Done<sp/>Rendering&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="namespacecam_1_1basrelief_1aec4302bf58eeb5e852d939da4758b1f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1aec4302bf58eeb5e852d939da4758b1f9" kindref="member">problemAreas</ref>(br):</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.use_image_source:</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>bpy.data.images[br.source_image_name]</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>bpy.data.images[</highlight><highlight class="stringliteral">&quot;Viewer<sp/>Node&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>silh_thres<sp/>=<sp/>br.silhouette_threshold</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>recover_silh<sp/>=<sp/>br.recover_silhouettes</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>silh_scale<sp/>=<sp/>br.silhouette_scale</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>MINS<sp/>=<sp/>br.min_gridsize</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>smoothiterations<sp/>=<sp/>br.smooth_iterations</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>vcycleiterations<sp/>=<sp/>br.vcycle_iterations</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>linbcgiterations<sp/>=<sp/>br.linbcg_iterations</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>useplanar<sp/>=<sp/>br.use_planar</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scale<sp/>down<sp/>before:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.gradient_scaling_mask_use:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>bpy.data.images[br.gradient_scaling_mask_name]</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mask=nar=imagetonumpy(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>br.scale_down_before_use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>i.scale(int(i.size[0]*br.scale_down_before),int(i.size[1]*br.scale_down_before))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>if<sp/>br.gradient_scaling_mask_use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.scale(int(m.size[0]*br.scale_down_before),int(m.size[1]*br.scale_down_before))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>nar<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a30e8d0f83e5e0e575e556a4ab0512c16" kindref="member">imagetonumpy</ref>(i)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.gradient_scaling_mask_use:</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a30e8d0f83e5e0e575e556a4ab0512c16" kindref="member">imagetonumpy</ref>(m)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>put<sp/>image<sp/>to<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a42f76d02a7449fbb2db6092b6dd7c708" kindref="member">tonemap</ref>(nar,<sp/>br.depth_exponent)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>nar<sp/>=<sp/>1-nar<sp/><sp/></highlight><highlight class="comment">#<sp/>reverse<sp/>z<sp/>buffer+<sp/>add<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>print(nar.min(),<sp/>nar.max())</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>gx<sp/>=<sp/>nar.copy()</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>gx.fill(0)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>gx[:-1,<sp/>:]<sp/>=<sp/>nar[1:,<sp/>:]-nar[:-1,<sp/>:]</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>gy<sp/>=<sp/>nar.copy()</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>gy.fill(0)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>gy[:,<sp/>:-1]<sp/>=<sp/>nar[:,<sp/>1:]-nar[:,<sp/>:-1]</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>it&apos;<sp/>ok,<sp/>we<sp/>can<sp/>treat<sp/>neg<sp/>and<sp/>positive<sp/>silh<sp/>separately<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>br.attenuation</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>numpy.logical_or(silhxplanar,silhyplanar)#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>planar<sp/>=<sp/>nar<sp/>&lt;<sp/>(nar.min()+0.0001)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sqrt<sp/>for<sp/>silhouettes<sp/>recovery:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>sqrarx<sp/>=<sp/>numpy.abs(gx)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>iter<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>br.silhouette_exponent):</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrarx<sp/>=<sp/>numpy.sqrt(sqrarx)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>sqrary<sp/>=<sp/>numpy.abs(gy)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>iter<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>br.silhouette_exponent):</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrary<sp/>=<sp/>numpy.sqrt(sqrary)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>detect<sp/>and<sp/>also<sp/>recover<sp/>silhouettes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>silhxpos<sp/>=<sp/>gx<sp/>&gt;<sp/>silh_thres</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>gx<sp/>=<sp/>gx*(-silhxpos)+recover_silh*(silhxpos*silh_thres*silh_scale)*sqrarx</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>silhxneg<sp/>=<sp/>gx<sp/>&lt;<sp/>-silh_thres</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>gx<sp/>=<sp/>gx*(-silhxneg)-recover_silh*(silhxneg*silh_thres*silh_scale)*sqrarx</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>silhx<sp/>=<sp/>numpy.logical_or(silhxpos,<sp/>silhxneg)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>gx<sp/>=<sp/>gx*silhx+(1.0/a*numpy.log(1.+a*(gx)))*(-silhx)<sp/><sp/></highlight><highlight class="comment">#<sp/>attenuate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>br.fade_distant_objects:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>gx*=(nar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>gy*=(nar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>silhypos<sp/>=<sp/>gy<sp/>&gt;<sp/>silh_thres</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>gy<sp/>=<sp/>gy*(-silhypos)+recover_silh*(silhypos*silh_thres*silh_scale)*sqrary</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>silhyneg<sp/>=<sp/>gy<sp/>&lt;<sp/>-silh_thres</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>gy<sp/>=<sp/>gy*(-silhyneg)-recover_silh*(silhyneg*silh_thres*silh_scale)*sqrary</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>silhy<sp/>=<sp/>numpy.logical_or(silhypos,<sp/>silhyneg)<sp/><sp/></highlight><highlight class="comment">#<sp/>both<sp/>silh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>gy<sp/>=<sp/>gy*silhy+(1.0/a*numpy.log(1.+a*(gy)))*(-silhy)<sp/><sp/></highlight><highlight class="comment">#<sp/>attenuate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>now<sp/>scale<sp/>slopes...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.gradient_scaling_mask_use:</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gx<sp/>*=<sp/>mask</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gy<sp/>*=<sp/>mask</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>divg<sp/>=<sp/>gx+gy</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>divga<sp/>=<sp/>numpy.abs(divg)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>divgp<sp/>=<sp/>divga<sp/>&gt;<sp/>silh_thres/4.0</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>divgp<sp/>=<sp/>1-divgp</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>2):</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1ac14b2661328ff1f3816c445ebfbca188" kindref="member">atimes</ref>(divgp,<sp/>divga)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divga<sp/>=<sp/>divgp</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a89cc1c47da537f47ed2cc5c3461b7e00" kindref="member">numpytoimage</ref>(divga,<sp/></highlight><highlight class="stringliteral">&apos;problem&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843" refid="namespacecam_1_1basrelief_1aa0248196478d87431123a0e74908ab1c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1aa0248196478d87431123a0e74908ab1c" kindref="member">relief</ref>(br):</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>time.time()</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.use_image_source:</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>bpy.data.images[br.source_image_name]</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>bpy.data.images[</highlight><highlight class="stringliteral">&quot;Viewer<sp/>Node&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>silh_thres<sp/>=<sp/>br.silhouette_threshold</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>recover_silh<sp/>=<sp/>br.recover_silhouettes</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>silh_scale<sp/>=<sp/>br.silhouette_scale</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>MINS<sp/>=<sp/>br.min_gridsize</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>smoothiterations<sp/>=<sp/>br.smooth_iterations</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>vcycleiterations<sp/>=<sp/>br.vcycle_iterations</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>linbcgiterations<sp/>=<sp/>br.linbcg_iterations</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>useplanar<sp/>=<sp/>br.use_planar</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>scale<sp/>down<sp/>before:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.gradient_scaling_mask_use:</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>bpy.data.images[br.gradient_scaling_mask_name]</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mask=nar=imagetonumpy(m)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>br.scale_down_before_use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>i.scale(int(i.size[0]*br.scale_down_before),int(i.size[1]*br.scale_down_before))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>if<sp/>br.gradient_scaling_mask_use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.scale(int(m.size[0]*br.scale_down_before),int(m.size[1]*br.scale_down_before))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>nar<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a30e8d0f83e5e0e575e556a4ab0512c16" kindref="member">imagetonumpy</ref>(i)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.gradient_scaling_mask_use:</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/><ref refid="namespacecam_1_1basrelief_1a30e8d0f83e5e0e575e556a4ab0512c16" kindref="member">imagetonumpy</ref>(m)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>put<sp/>image<sp/>to<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a42f76d02a7449fbb2db6092b6dd7c708" kindref="member">tonemap</ref>(nar,<sp/>br.depth_exponent)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>nar<sp/>=<sp/>1-nar<sp/><sp/></highlight><highlight class="comment">#<sp/>reverse<sp/>z<sp/>buffer+<sp/>add<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Range:&quot;</highlight><highlight class="normal">,<sp/>nar.min(),<sp/>nar.max())</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nar.min()<sp/>-<sp/>nar.max()<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classcam_1_1basrelief_1_1ReliefError" kindref="compound">ReliefError</ref>(</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>Image<sp/>Is<sp/>Blank<sp/>-<sp/>Check<sp/>You<sp/>Have<sp/>the<sp/>Correct<sp/>View<sp/>Layer<sp/>or<sp/>Input<sp/>Image<sp/>Set.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>gx<sp/>=<sp/>nar.copy()</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>gx.fill(0)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>gx[:-1,<sp/>:]<sp/>=<sp/>nar[1:,<sp/>:]-nar[:-1,<sp/>:]</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>gy<sp/>=<sp/>nar.copy()</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>gy.fill(0)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>gy[:,<sp/>:-1]<sp/>=<sp/>nar[:,<sp/>1:]-nar[:,<sp/>:-1]</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>it&apos;<sp/>ok,<sp/>we<sp/>can<sp/>treat<sp/>neg<sp/>and<sp/>positive<sp/>silh<sp/>separately<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>br.attenuation</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>numpy.logical_or(silhxplanar,silhyplanar)#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>planar<sp/>=<sp/>nar<sp/>&lt;<sp/>(nar.min()+0.0001)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sqrt<sp/>for<sp/>silhouettes<sp/>recovery:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>sqrarx<sp/>=<sp/>numpy.abs(gx)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>iter<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>br.silhouette_exponent):</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrarx<sp/>=<sp/>numpy.sqrt(sqrarx)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>sqrary<sp/>=<sp/>numpy.abs(gy)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>iter<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>br.silhouette_exponent):</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrary<sp/>=<sp/>numpy.sqrt(sqrary)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>detect<sp/>and<sp/>also<sp/>recover<sp/>silhouettes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>silhxpos<sp/>=<sp/>gx<sp/>&gt;<sp/>silh_thres</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;***<sp/>silhxpos<sp/>is<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>silhxpos)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>gx<sp/>=<sp/>gx*(~silhxpos)+recover_silh*(silhxpos*silh_thres*silh_scale)*sqrarx</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>silhxneg<sp/>=<sp/>gx<sp/>&lt;<sp/>-silh_thres</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>gx<sp/>=<sp/>gx*(~silhxneg)-recover_silh*(silhxneg*silh_thres*silh_scale)*sqrarx</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>silhx<sp/>=<sp/>numpy.logical_or(silhxpos,<sp/>silhxneg)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>gx<sp/>=<sp/>gx*silhx+(1.0/a*numpy.log(1.+a*(gx)))*(~silhx)<sp/><sp/></highlight><highlight class="comment">#<sp/>attenuate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>br.fade_distant_objects:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>gx*=(nar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>gy*=(nar)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>silhypos<sp/>=<sp/>gy<sp/>&gt;<sp/>silh_thres</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>gy<sp/>=<sp/>gy*(~silhypos)+recover_silh*(silhypos*silh_thres*silh_scale)*sqrary</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>silhyneg<sp/>=<sp/>gy<sp/>&lt;<sp/>-silh_thres</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>gy<sp/>=<sp/>gy*(~silhyneg)-recover_silh*(silhyneg*silh_thres*silh_scale)*sqrary</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>silhy<sp/>=<sp/>numpy.logical_or(silhypos,<sp/>silhyneg)<sp/><sp/></highlight><highlight class="comment">#<sp/>both<sp/>silh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>gy<sp/>=<sp/>gy*silhy+(1.0/a*numpy.log(1.+a*(gy)))*(~silhy)<sp/><sp/></highlight><highlight class="comment">#<sp/>attenuate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>now<sp/>scale<sp/>slopes...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.gradient_scaling_mask_use:</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gx<sp/>*=<sp/>mask</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gy<sp/>*=<sp/>mask</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(silhx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>silhx=abs(gx)&gt;silh_thres</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>gx=gx*(-silhx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>silhy=abs(gy)&gt;silh_thres</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>gy=gy*(-silhy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>divg<sp/>=<sp/>gx+gy</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>divg[1:,<sp/>:]<sp/>=<sp/>divg[1:,<sp/>:]-gx[:-1,<sp/>:]<sp/><sp/></highlight><highlight class="comment">#<sp/>subtract<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>divg[:,<sp/>1:]<sp/>=<sp/>divg[:,<sp/>1:]-gy[:,<sp/>:-1]<sp/><sp/></highlight><highlight class="comment">#<sp/>subtract<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.detail_enhancement_use:<sp/><sp/></highlight><highlight class="comment">#<sp/>fourier<sp/>stuff<sp/>here!disabled<sp/>by<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;detail<sp/>enhancement&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows,<sp/>cols<sp/>=<sp/>gx.shape</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crow,<sp/>ccol<sp/>=<sp/>int(rows/2),<sp/>int(cols/2)</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dist=int(br.detail_enhancement_freq*gx.shape[0]/(2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>bandwidth=.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dist=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divgmin<sp/>=<sp/>divg.min()</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divg<sp/>+=<sp/>divgmin</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divgf<sp/>=<sp/>numpy.fft.fft2(divg)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divgfshift<sp/>=<sp/>numpy.fft.fftshift(divgf)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#mspectrum<sp/>=<sp/>20*numpy.log(numpy.abs(divgfshift))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>numpytoimage(mspectrum,&apos;mspectrum&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>divg.copy()</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>numpy.array((crow,<sp/>ccol))</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>bpy.context.scene.view_settings.curve_mapping.initialize()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cur=bpy.context.scene.view_settings.curve_mapping.curves[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">filterwindow(x,<sp/>y,<sp/>cx=0,<sp/>cy=0):<sp/><sp/></highlight><highlight class="comment">#<sp/>,<sp/>curve=None):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs((cx-x))+abs((cy-y))</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>v=(abs((cx-x)/(cx))+abs((cy-y)/(cy)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>numpy.fromfunction(</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filterwindow,<sp/>divg.shape,<sp/>cx=crow,<sp/>cy=ccol)<sp/><sp/></highlight><highlight class="comment">#<sp/>,<sp/>curve=cur)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>numpy.sqrt(mask)</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>x<sp/>in<sp/>range(mask.shape[0]):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>for<sp/>y<sp/>in<sp/>range(mask.shape[1]):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask[x,y]=cur.evaluate(mask[x,y])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskmin<sp/>=<sp/>mask.min()</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskmax<sp/>=<sp/>mask.max()</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>(mask-maskmin)/(maskmax-maskmin)</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>*=<sp/>br.detail_enhancement_amount</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>+=<sp/>1-mask.max()</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>mask+=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask[crow-1:crow+1,<sp/>ccol-1:ccol+1]<sp/>=<sp/>1<sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>preserve<sp/>basic<sp/>freqencies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>numpytoimage(mask,&apos;mask&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divgfshift<sp/>=<sp/>divgfshift*mask</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divgfshift<sp/>=<sp/>numpy.fft.ifftshift(divgfshift)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divg<sp/>=<sp/>numpy.abs(numpy.fft.ifft2(divgfshift))</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divg<sp/>-=<sp/>divgmin</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divg<sp/>=<sp/>-divg</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;detail<sp/>enhancement<sp/>finished&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>levels<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>mins<sp/>=<sp/>min(nar.shape[0],<sp/>nar.shape[1])</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mins<sp/>&gt;=<sp/>MINS):</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levels<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mins<sp/>=<sp/>mins/2</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>target<sp/>=<sp/>numpy.zeros_like(divg)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a4cb6f56c1aa4d079ec817111a923c767" kindref="member">solve_pde_multigrid</ref>(divg,<sp/>target,<sp/>vcycleiterations,<sp/>linbcgiterations,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smoothiterations,<sp/>mins,<sp/>levels,<sp/>useplanar,<sp/>planar)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a42f76d02a7449fbb2db6092b6dd7c708" kindref="member">tonemap</ref>(target,<sp/>1)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1a226bc6d169e18fc244218469ede9b91b" kindref="member">buildMesh</ref>(target,<sp/>br)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>ipath=bpy.path.abspath(i.filepath)[:-len(bpy.path.basename(i.filepath))]+br.output_image_name+&apos;.exr&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>numpysave(target,ipath)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>time.time()-t</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;total<sp/>time:&apos;</highlight><highlight class="normal"><sp/>+<sp/>str(t)+</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>numpytoimage(target,br.output_image_name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001" refid="classcam_1_1basrelief_1_1BasReliefsettings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1basrelief_1_1BasReliefsettings" kindref="compound">BasReliefsettings</ref>(<ref refid="classbpy_1_1types_1_1PropertyGroup" kindref="compound">bpy.types.PropertyGroup</ref>):</highlight></codeline>
<codeline lineno="1002" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a02cf3acf4385f9e2bdd7917e6fd32fff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>use_image_source:<sp/>BoolProperty(</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Use<sp/>Image<sp/>Source&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1007" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a13007ac7d4f20273c6ebca6fefcf30a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>source_image_name:<sp/>StringProperty(</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&apos;Image<sp/>Source&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&apos;image<sp/>source&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1011" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a4b25a0c654ce88a785b48574c74dd23e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>view_layer_name:<sp/>StringProperty(</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&apos;View<sp/>Layer<sp/>Source&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&apos;Make<sp/>a<sp/>bas-relief<sp/>from<sp/>whatever<sp/>is<sp/>on<sp/>this<sp/>view<sp/>layer&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1015" refid="classcam_1_1basrelief_1_1BasReliefsettings_1abaa63120661727dc25c7cb3b81a475f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bit_diameter:<sp/>FloatProperty(</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Diameter<sp/>of<sp/>Ball<sp/>End<sp/>in<sp/>mm&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Diameter<sp/>of<sp/>bit<sp/>which<sp/>will<sp/>be<sp/>used<sp/>for<sp/>carving&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=0.01,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=50.0,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=3.175,</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision=PRECISION,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1023" refid="classcam_1_1basrelief_1_1BasReliefsettings_1ab4a2b092e7db742c922c9f20df151ee4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pass_per_radius:<sp/>IntProperty(</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Passes<sp/>per<sp/>Radius&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Amount<sp/>of<sp/>passes<sp/>per<sp/>radius\n(more<sp/>passes,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;more<sp/>mesh<sp/>precision)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=2,</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=1,</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=10,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1031" refid="classcam_1_1basrelief_1_1BasReliefsettings_1ab5789f0d327f7ce26b016da4331bbe19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>widthmm:<sp/>IntProperty(</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Desired<sp/>Width<sp/>in<sp/>mm&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=200,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=5,</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=4000,</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1037" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a8364e7e45dc884c53a7b3f2ac3a481ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>heightmm:<sp/>IntProperty(</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Desired<sp/>Height<sp/>in<sp/>mm&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=150,</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=5,</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=4000,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1043" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a163725dc844be070bede9643e4ae0237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>thicknessmm:<sp/>IntProperty(</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Thickness<sp/>in<sp/>mm&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=15,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=5,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=100,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a0fa94c30fd8f84f56967743d0b504840" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>justifyx:<sp/>EnumProperty(</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;X&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items=[</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Left&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>0),</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;-0.5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Centered&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>1),</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;-1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Right&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>2)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="stringliteral">&apos;-1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1059" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a6ec3efaa2d51eedbb0d107932aa60715" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>justifyy:<sp/>EnumProperty(</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items=[</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Bottom&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>0),</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;-0.5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Centered&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>2),</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;-1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Top&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>1),</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="stringliteral">&apos;-1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1068" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a002c793b530cd34bf9aa903dde2e66ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>justifyz:<sp/>EnumProperty(</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Z&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items=[</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;-1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Below<sp/>0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>0),</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;-0.5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Centered&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>2),</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&apos;1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Above<sp/>0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">,<sp/>1),</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="stringliteral">&apos;-1&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078" refid="classcam_1_1basrelief_1_1BasReliefsettings_1ad03faf87e52daef6798fc4b17ae6c943" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>depth_exponent:<sp/>FloatProperty(</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Depth<sp/>Exponent&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Initial<sp/>depth<sp/>map<sp/>is<sp/>taken<sp/>to<sp/>this<sp/>power.<sp/>Higher<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sharper<sp/>relief&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=0.5,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=10.0,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=1.0,</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision=PRECISION,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088" refid="classcam_1_1basrelief_1_1BasReliefsettings_1adf164fa5a5bc56ca1983c89ef60284b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>silhouette_threshold:<sp/>FloatProperty(</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Silhouette<sp/>Threshold&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Silhouette<sp/>threshold&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=0.000001,</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=1.0,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=0.003,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision=PRECISION,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1096" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a9977b9a6d1104ebdb58106291b2f73d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>recover_silhouettes:<sp/>BoolProperty(</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Recover<sp/>Silhouettes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1101" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a9f4c0597afbcb02a5106cb05e6518fb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>silhouette_scale:<sp/>FloatProperty(</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Silhouette<sp/>Scale&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Silhouette<sp/>scale&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=0.000001,</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=5.0,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=0.3,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision=PRECISION,</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1109" refid="classcam_1_1basrelief_1_1BasReliefsettings_1af23a8ac5b0aa15bdbe189fea3db1eb9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>silhouette_exponent:<sp/>IntProperty(</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Silhouette<sp/>Square<sp/>Exponent&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;If<sp/>lower,<sp/>true<sp/>depth<sp/>distances<sp/>between<sp/>objects<sp/>will<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;more<sp/>visibe<sp/>in<sp/>the<sp/>relief&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=3,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=0,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=5,</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1117" refid="classcam_1_1basrelief_1_1BasReliefsettings_1ace3086b0bfe6bb3b2d9888500a8aecf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>attenuation:<sp/>FloatProperty(</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Gradient<sp/>Attenuation&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Gradient<sp/>attenuation&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=0.000001,</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=100.0,</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=1.0,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision=PRECISION,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1125" refid="classcam_1_1basrelief_1_1BasReliefsettings_1aa3e4bfba9ab23e6cb6ed000ee4a14d77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>min_gridsize:<sp/>IntProperty(</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Minimum<sp/>Grid<sp/>Size&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=16,</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=2,</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=512,</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1131" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a83a7f266f5f6c447a17276b169f39be4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>smooth_iterations:<sp/>IntProperty(</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Smooth<sp/>Iterations&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=1,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=1,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=64,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1137" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a9709d6a804941ea8d76bac6f76d0c37b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vcycle_iterations:<sp/>IntProperty(</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;V-Cycle<sp/>Iterations&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Set<sp/>higher<sp/>for<sp/>planar<sp/>constraint&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=2,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=1,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=128,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1144" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a72f1271b66522b9cc2ef83cf40260b29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>linbcg_iterations:<sp/>IntProperty(</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;LINBCG<sp/>Iterations&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Set<sp/>lower<sp/>for<sp/>flatter<sp/>relief,<sp/>and<sp/>when<sp/>using<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;planar<sp/>constraint&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=5,</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=1,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=64,</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1152" refid="classcam_1_1basrelief_1_1BasReliefsettings_1aed5d8e359180aa6063323967ccecd120" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>use_planar:<sp/>BoolProperty(</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Use<sp/>Planar<sp/>Constraint&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1157" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a601540a6f999cf6b1ed1f94a62e18fd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient_scaling_mask_use:<sp/>BoolProperty(</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Scale<sp/>Gradients<sp/>with<sp/>Mask&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1162" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a001d4ed97b779b0eb03b5b791b0a596c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>decimate_ratio:<sp/>FloatProperty(</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Decimate<sp/>Ratio&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Simplify<sp/>the<sp/>mesh<sp/>using<sp/>the<sp/>Decimate<sp/>modifier.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>lower<sp/>the<sp/>value<sp/>the<sp/>more<sp/>simplyfied&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=0.01,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=1.0,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=0.1,</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision=PRECISION,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172" refid="classcam_1_1basrelief_1_1BasReliefsettings_1aa0ac6747cd89707716e23b0e7be0cb15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient_scaling_mask_name:<sp/>StringProperty(</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&apos;Scaling<sp/>Mask<sp/>Name&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&apos;Mask<sp/>name&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1176" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a3c84a314c4c78833b465b8d9cad8aebd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>scale_down_before_use:<sp/>BoolProperty(</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Scale<sp/>Down<sp/>Image<sp/>Before<sp/>Processing&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1181" refid="classcam_1_1basrelief_1_1BasReliefsettings_1acfc8b4472ef13376ece5f43d0a5ccf8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>scale_down_before:<sp/>FloatProperty(</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Image<sp/>Scale&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Image<sp/>scale&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=0.025,</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=1.0,</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=.5,</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision=PRECISION,</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1189" refid="classcam_1_1basrelief_1_1BasReliefsettings_1ab067c7193295c43a0c7777503c5ef68f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>detail_enhancement_use:<sp/>BoolProperty(</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Enhance<sp/>Details&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Enhance<sp/>details<sp/>by<sp/>frequency<sp/>analysis&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#detail_enhancement_freq=FloatProperty(name=&quot;frequency<sp/>limit&quot;,<sp/>description=&quot;Image<sp/>scale&quot;,<sp/>min=0.025,<sp/>max=1.0,<sp/>default=.5,<sp/>precision=PRECISION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195" refid="classcam_1_1basrelief_1_1BasReliefsettings_1add089ce95055b467126345343ab949f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>detail_enhancement_amount:<sp/>FloatProperty(</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Amount&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Image<sp/>scale&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min=0.025,</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max=1.0,</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=.5,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precision=PRECISION,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204" refid="classcam_1_1basrelief_1_1BasReliefsettings_1a6ebfe2d9324f51afd4d2ce351202fc61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>advanced:<sp/>BoolProperty(</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Advanced<sp/>Options&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Show<sp/>advanced<sp/>options&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211" refid="classcam_1_1basrelief_1_1BASRELIEF__Panel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1basrelief_1_1BASRELIEF__Panel" kindref="compound">BASRELIEF_Panel</ref>(<ref refid="classbpy_1_1types_1_1Panel" kindref="compound">bpy.types.Panel</ref>):</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Bas<sp/>Relief<sp/>Panel&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213" refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1ae6c842bcc9e6b3152504d0f742d1c4ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Bas<sp/>Relief&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214" refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1ae66a7dfd9b9680dd70f86edebe70a173" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_idname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WORLD_PT_BASRELIEF&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216" refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1ae88b61deb336a6826c8d469a1f45bd7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_space_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PROPERTIES&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217" refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1aa18dc0f05e8abffa8fbe48cc51139cba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_region_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WINDOW&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218" refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1a2d1c816d779b439290ef5518621d76f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_context<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;render&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220" refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1acfea5e9e41d713c355b08a2005bddab8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>COMPAT_ENGINES<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;CNCCAM_RENDER&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>def<sp/>draw_header(self,<sp/>context):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>self.layout.menu(&quot;CAM_CUTTER_MT_presets&quot;,<sp/>text=&quot;CAM<sp/>Cutter&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225" refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1a5691a061bfdef15dbb1574f67ce3f29d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1a5691a061bfdef15dbb1574f67ce3f29d" kindref="member">poll</ref>(cls,<sp/>context):</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rd<sp/>=<sp/>context.scene.render</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rd.engine<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cls.<ref refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1acfea5e9e41d713c355b08a2005bddab8" kindref="member">COMPAT_ENGINES</ref></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1a64ced755beeb2b366bc68ed68142406f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1basrelief_1_1BASRELIEF__Panel_1a64ced755beeb2b366bc68ed68142406f" kindref="member">draw</ref>(self,<sp/>context):</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout<sp/>=<sp/>self.layout</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(dir(layout))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bpy.context.scene</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br<sp/>=<sp/>s.basreliefsettings</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>br:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cutter<sp/>preset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.operator(</highlight><highlight class="stringliteral">&quot;scene.calculate_bas_relief&quot;</highlight><highlight class="normal">,<sp/>text=</highlight><highlight class="stringliteral">&quot;Calculate<sp/>Relief&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;advanced&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;use_image_source&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.use_image_source:</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop_search(br,<sp/></highlight><highlight class="stringliteral">&apos;source_image_name&apos;</highlight><highlight class="normal">,<sp/>bpy.data,<sp/></highlight><highlight class="stringliteral">&quot;images&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop_search(br,<sp/></highlight><highlight class="stringliteral">&apos;view_layer_name&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpy.context.scene,<sp/></highlight><highlight class="stringliteral">&quot;view_layers&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;depth_exponent&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.label(text=</highlight><highlight class="stringliteral">&quot;Project<sp/>Parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;bit_diameter&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;pass_per_radius&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;widthmm&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;heightmm&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;thicknessmm&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.label(text=</highlight><highlight class="stringliteral">&quot;Justification&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;justifyx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;justifyy&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;justifyz&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.label(text=</highlight><highlight class="stringliteral">&quot;Silhouette&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;silhouette_threshold&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;recover_silhouettes&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.recover_silhouettes:</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;silhouette_scale&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.advanced:</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;silhouette_exponent&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>layout.template_curve_mapping(br,&apos;curva&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.advanced:</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>layout.prop(br,&apos;attenuation&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;min_gridsize&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;smooth_iterations&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;vcycle_iterations&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;linbcg_iterations&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;use_planar&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;decimate_ratio&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;gradient_scaling_mask_use&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.advanced:</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.gradient_scaling_mask_use:</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop_search(</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br,<sp/></highlight><highlight class="stringliteral">&apos;gradient_scaling_mask_name&apos;</highlight><highlight class="normal">,<sp/>bpy.data,<sp/></highlight><highlight class="stringliteral">&quot;images&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;detail_enhancement_use&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>br.detail_enhancement_use:</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>layout.prop(br,&apos;detail_enhancement_freq&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout.prop(br,<sp/></highlight><highlight class="stringliteral">&apos;detail_enhancement_amount&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(dir(layout))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>layout.prop(s.view_settings.curve_mapping,&quot;curves&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#layout.label(&apos;Frequency<sp/>scaling:&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>s.view_settings.curve_mapping.clip_max_y=2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#layout.template_curve_mapping(s.view_settings,<sp/>&quot;curve_mapping&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>layout.prop(br,&apos;scale_down_before_use&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>br.scale_down_before_use:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>layout.prop(br,&apos;scale_down_before&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297" refid="classcam_1_1basrelief_1_1ReliefError" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1basrelief_1_1ReliefError" kindref="compound">ReliefError</ref>(<ref refid="classException" kindref="compound">Exception</ref>):</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301" refid="classcam_1_1basrelief_1_1DoBasRelief" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DoBasRelief(bpy.types.Operator):</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Calculate<sp/>Bas<sp/>Relief&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303" refid="classcam_1_1basrelief_1_1DoBasRelief_1a80548b1f3d39bfe3eef223833638c596" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_idname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;scene.calculate_bas_relief&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304" refid="classcam_1_1basrelief_1_1DoBasRelief_1a6d8ad59cdd0c16d6e5abd67cb145c78e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Calculate<sp/>Bas<sp/>Relief&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305" refid="classcam_1_1basrelief_1_1DoBasRelief_1aabe1b86ff2e5df5249245af5d4c62481" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_options<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;REGISTER&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;UNDO&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307" refid="classcam_1_1basrelief_1_1DoBasRelief_1abc0df7784bd39f2b529fa4176dfcd58b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>processes<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309" refid="classcam_1_1basrelief_1_1DoBasRelief_1a8097cf99320b782af9c0d1d1968bfdd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1basrelief_1_1DoBasRelief_1a8097cf99320b782af9c0d1d1968bfdd1" kindref="member">execute</ref>(self,<sp/>context):</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bpy.context.scene</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br<sp/>=<sp/>s.basreliefsettings</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>br.use_image_source<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>br.view_layer_name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br.view_layer_name<sp/>=<sp/>bpy.context.view_layer.name</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1af116eedd1395f73209312d186e0a14d2" kindref="member">renderScene</ref>(br.widthmm,<sp/>br.heightmm,<sp/>br.bit_diameter,<sp/>br.pass_per_radius,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>br.use_image_source,<sp/>br.view_layer_name)</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ReliefError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.report({</highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">},<sp/>str(e))</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&quot;CANCELLED&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1aa0248196478d87431123a0e74908ab1c" kindref="member">relief</ref>(br)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ReliefError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.report({</highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">},<sp/>str(e))</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&quot;CANCELLED&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&apos;FINISHED&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330" refid="classcam_1_1basrelief_1_1ProblemAreas" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1basrelief_1_1ProblemAreas" kindref="compound">ProblemAreas</ref>(bpy.types.Operator):</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Find<sp/>Bas<sp/>Relief<sp/>Problem<sp/>Areas&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332" refid="classcam_1_1basrelief_1_1ProblemAreas_1a2a17ca87e149bc26f4d148f81154e7d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_idname<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;scene.problemareas_bas_relief&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333" refid="classcam_1_1basrelief_1_1ProblemAreas_1adcf3ab42cdfff9042c7f2c4a85130786" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Problem<sp/>Areas<sp/>Bas<sp/>Relief&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334" refid="classcam_1_1basrelief_1_1ProblemAreas_1a6606b82f153839c6cfd687793191c464" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bl_options<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;REGISTER&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;UNDO&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336" refid="classcam_1_1basrelief_1_1ProblemAreas_1a19fbabe7de3b92fb1c8b0a5329ee1d75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>processes<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>def<sp/>poll(cls,<sp/>context):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>return<sp/>context.active_object<sp/>is<sp/>not<sp/>None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342" refid="classcam_1_1basrelief_1_1ProblemAreas_1ab9ab126f3092f574365fe92a5553f85c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcam_1_1basrelief_1_1ProblemAreas_1ab9ab126f3092f574365fe92a5553f85c" kindref="member">execute</ref>(self,<sp/>context):</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bpy.context.scene</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>br<sp/>=<sp/>s.basreliefsettings</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecam_1_1basrelief_1aec4302bf58eeb5e852d939da4758b1f9" kindref="member">problemAreas</ref>(br)</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&apos;FINISHED&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349" refid="namespacecam_1_1basrelief_1aaa9a591a131ef4eddea99e827ed9c4cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1aaa9a591a131ef4eddea99e827ed9c4cf" kindref="member">get_panels</ref>():</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>return(</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BasReliefsettings,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BASRELIEF_Panel,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoBasRelief,</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProblemAreas</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358" refid="namespacecam_1_1basrelief_1a026b08c04bb7d54727fe19238719ae55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a026b08c04bb7d54727fe19238719ae55" kindref="member">register</ref>():</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>get_panels():</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpy.utils.register_class(p)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bpy.types.Scene</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>s.basreliefsettings<sp/>=<sp/>PointerProperty(</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type=BasReliefsettings,</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367" refid="namespacecam_1_1basrelief_1a517f356287ef040219859ad26bdd5627" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1basrelief_1a517f356287ef040219859ad26bdd5627" kindref="member">unregister</ref>():</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>get_panels():</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpy.utils.unregister_class(p)</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>bpy.types.Scene</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>del<sp/>s.basreliefsettings</highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/SpectralVectors/blendercam/scripts/addons/cam/basrelief.py"/>
  </compounddef>
</doxygen>
