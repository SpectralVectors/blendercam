<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="parametric_8py" kind="file" language="Python">
    <compoundname>parametric.py</compoundname>
    <innernamespace refid="namespacecam">cam</innernamespace>
    <innernamespace refid="namespacecam_1_1parametric">cam::parametric</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacecam_1_1parametric" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;BlenderCAM<sp/>&apos;parametric.py&apos;<sp/>Â©<sp/>2019<sp/>Devon<sp/>(Gorialis)<sp/>R</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">MIT<sp/>License</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Summary:</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">Create<sp/>a<sp/>Blender<sp/>curve<sp/>from<sp/>a<sp/>3D<sp/>parametric<sp/>function.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral">This<sp/>allows<sp/>for<sp/>a<sp/>3D<sp/>plot<sp/>to<sp/>be<sp/>made<sp/>of<sp/>the<sp/>function,<sp/>which<sp/>can<sp/>be<sp/>converted<sp/>into<sp/>a<sp/>mesh.</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral">I<sp/>have<sp/>documented<sp/>the<sp/>inner<sp/>workings<sp/>here,<sp/>but<sp/>if<sp/>you&apos;re<sp/>not<sp/>interested<sp/>and<sp/>just<sp/>want<sp/>to</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">suit<sp/>this<sp/>to<sp/>your<sp/>own<sp/>function,<sp/>scroll<sp/>down<sp/>to<sp/>the<sp/>bottom<sp/>and<sp/>edit<sp/>the<sp/>`f(t)`<sp/>function<sp/>and</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">the<sp/>iteration<sp/>count<sp/>to<sp/>your<sp/>liking.</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">This<sp/>code<sp/>has<sp/>been<sp/>checked<sp/>to<sp/>work<sp/>on<sp/>Blender<sp/>2.92.</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pow</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>bpy</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>mathutils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Vector</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespacecam_1_1parametric_1a02742565c1f1faf491c0d3d677dd33b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1parametric_1a02742565c1f1faf491c0d3d677dd33b6" kindref="member">derive_bezier_handles</ref>(a,<sp/>b,<sp/>c,<sp/>d,<sp/>tb,<sp/>tc):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Derives<sp/>bezier<sp/>handles<sp/>by<sp/>using<sp/>the<sp/>start<sp/>and<sp/>end<sp/>of<sp/>the<sp/>curve<sp/>with<sp/>2<sp/>intermediate</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>points<sp/>to<sp/>use<sp/>for<sp/>interpolation.</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>a:</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>start<sp/>point.</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>b:</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>first<sp/>mid-point,<sp/>located<sp/>at<sp/>`tb`<sp/>on<sp/>the<sp/>bezier<sp/>segment,<sp/>where<sp/>0<sp/>&lt;<sp/>`tb`<sp/>&lt;<sp/>1.</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>c:</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>second<sp/>mid-point,<sp/>located<sp/>at<sp/>`tc`<sp/>on<sp/>the<sp/>bezier<sp/>segment,<sp/>where<sp/>0<sp/>&lt;<sp/>`tc`<sp/>&lt;<sp/>1.</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>d:</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>end<sp/>point.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>tb:</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>position<sp/>of<sp/>the<sp/>first<sp/>point<sp/>in<sp/>the<sp/>bezier<sp/>segment.</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>tc:</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>position<sp/>of<sp/>the<sp/>second<sp/>point<sp/>in<sp/>the<sp/>bezier<sp/>segment.</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>two<sp/>intermediate<sp/>handles,<sp/>that<sp/>is,<sp/>the<sp/>right<sp/>handle<sp/>of<sp/>the<sp/>start<sp/>point</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>the<sp/>left<sp/>handle<sp/>of<sp/>the<sp/>end<sp/>point.</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>matrix<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_a<sp/>=<sp/>3<sp/>*<sp/>pow(1<sp/>-<sp/>tb,<sp/>2)<sp/>*<sp/>tb</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_b<sp/>=<sp/>3<sp/>*<sp/>(1<sp/>-<sp/>tb)<sp/>*<sp/>pow(tb,<sp/>2)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_c<sp/>=<sp/>3<sp/>*<sp/>pow(1<sp/>-<sp/>tc,<sp/>2)<sp/>*<sp/>tc</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_d<sp/>=<sp/>3<sp/>*<sp/>(1<sp/>-<sp/>tc)<sp/>*<sp/>pow(tc,<sp/>2)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>the<sp/>matrix<sp/>determinant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix_determinant<sp/>=<sp/>1<sp/>/<sp/>((matrix_a<sp/>*<sp/>matrix_d)<sp/>-<sp/>(matrix_b<sp/>*<sp/>matrix_c))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>the<sp/>components<sp/>of<sp/>the<sp/>target<sp/>position<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>final_b<sp/>=<sp/>b<sp/>-<sp/>(pow(1<sp/>-<sp/>tb,<sp/>3)<sp/>*<sp/>a)<sp/>-<sp/>(pow(tb,<sp/>3)<sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>final_c<sp/>=<sp/>c<sp/>-<sp/>(pow(1<sp/>-<sp/>tc,<sp/>3)<sp/>*<sp/>a)<sp/>-<sp/>(pow(tc,<sp/>3)<sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Multiply<sp/>the<sp/>inversed<sp/>matrix<sp/>with<sp/>the<sp/>position<sp/>vector<sp/>to<sp/>get<sp/>the<sp/>handle<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>bezier_b<sp/>=<sp/>matrix_determinant<sp/>*<sp/>((matrix_d<sp/>*<sp/>final_b)<sp/>+<sp/>(-matrix_b<sp/>*<sp/>final_c))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>bezier_c<sp/>=<sp/>matrix_determinant<sp/>*<sp/>((-matrix_c<sp/>*<sp/>final_b)<sp/>+<sp/>(matrix_a<sp/>*<sp/>final_c))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>the<sp/>handle<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bezier_b,<sp/>bezier_c</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="namespacecam_1_1parametric_1a1b0e9636a5e2114b9a4685200d2bbbae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1parametric_1a1b0e9636a5e2114b9a4685200d2bbbae" kindref="member">create_parametric_curve</ref>(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*args,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min:<sp/>float<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max:<sp/>float<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_cubic:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations:<sp/>int<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolution_u:<sp/>int<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**kwargs):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Creates<sp/>a<sp/>Blender<sp/>bezier<sp/>curve<sp/>object<sp/>from<sp/>a<sp/>parametric<sp/>function.</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>&quot;plots&quot;<sp/>the<sp/>function<sp/>in<sp/>3D<sp/>space<sp/>from<sp/>`min<sp/>&lt;=<sp/>t<sp/>&lt;=<sp/>max`.</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>function:</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>to<sp/>plot<sp/>as<sp/>a<sp/>Blender<sp/>curve.</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>should<sp/>take<sp/>in<sp/>a<sp/>float<sp/>value<sp/>of<sp/>`t`<sp/>and<sp/>return<sp/>a<sp/>3-item<sp/>tuple<sp/>or<sp/>list</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>X,<sp/>Y<sp/>and<sp/>Z<sp/>coordinates<sp/>at<sp/>that<sp/>point:</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`function(t)<sp/>-&gt;<sp/>(x,<sp/>y,<sp/>z)`</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`t`<sp/>is<sp/>plotted<sp/>according<sp/>to<sp/>`min<sp/>&lt;=<sp/>t<sp/>&lt;=<sp/>max`,<sp/>but<sp/>if<sp/>`use_cubic`<sp/>is<sp/>enabled,<sp/>this<sp/>function</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needs<sp/>to<sp/>be<sp/>able<sp/>to<sp/>take<sp/>values<sp/>less<sp/>than<sp/>`min`<sp/>and<sp/>greater<sp/>than<sp/>`max`.</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>*args:</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Additional<sp/>positional<sp/>arguments<sp/>to<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>plotting<sp/>function.</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>These<sp/>are<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>use_cubic:</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Whether<sp/>or<sp/>not<sp/>to<sp/>calculate<sp/>the<sp/>cubic<sp/>bezier<sp/>handles<sp/>as<sp/>to<sp/>create<sp/>smoother<sp/>splines.</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Turning<sp/>this<sp/>off<sp/>reduces<sp/>calculation<sp/>time<sp/>and<sp/>memory<sp/>usage,<sp/>but<sp/>produces<sp/>more<sp/>jagged</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splines<sp/>with<sp/>sharp<sp/>edges.</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>iterations:</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>&apos;subdivisions&apos;<sp/>of<sp/>the<sp/>parametric<sp/>to<sp/>plot.</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Setting<sp/>this<sp/>higher<sp/>produces<sp/>more<sp/>accurate<sp/>curves<sp/>but<sp/>increases<sp/>calculation<sp/>time<sp/>and</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory<sp/>usage.</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>resolution_u:</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>preview<sp/>surface<sp/>resolution<sp/>in<sp/>the<sp/>U<sp/>direction<sp/>of<sp/>the<sp/>bezier<sp/>curve.</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Setting<sp/>this<sp/>to<sp/>a<sp/>higher<sp/>value<sp/>produces<sp/>smoother<sp/>curves<sp/>in<sp/>rendering,<sp/>and<sp/>increases<sp/>the</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>vertices<sp/>the<sp/>curve<sp/>will<sp/>get<sp/>if<sp/>converted<sp/>into<sp/>a<sp/>mesh<sp/>(e.g.<sp/>for<sp/>edge<sp/>looping)</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>**kwargs:</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Additional<sp/>keyword<sp/>arguments<sp/>to<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>plotting<sp/>function.</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>These<sp/>are<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:return:</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>new<sp/>Blender<sp/>object.</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>Curve<sp/>to<sp/>populate<sp/>with<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>curve<sp/>=<sp/>bpy.data.curves.new(</highlight><highlight class="stringliteral">&apos;Parametric&apos;</highlight><highlight class="normal">,<sp/>type=</highlight><highlight class="stringliteral">&apos;CURVE&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>curve.dimensions<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;3D&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>curve.resolution_u<sp/>=<sp/>30</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>a<sp/>new<sp/>spline<sp/>and<sp/>give<sp/>it<sp/>the<sp/>appropriate<sp/>amount<sp/>of<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>spline<sp/>=<sp/>curve.splines.new(</highlight><highlight class="stringliteral">&apos;BEZIER&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>spline.bezier_points.add(iterations)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>use_cubic:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function(((i<sp/>-<sp/>3)<sp/>/<sp/>(3<sp/>*<sp/>iterations))<sp/>*<sp/>(max<sp/>-<sp/>min)<sp/>+<sp/>min,<sp/>*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range((3<sp/>*<sp/>(iterations<sp/>+<sp/>2))<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>intermediate<sp/>points<sp/>into<sp/>handles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iterations<sp/>+<sp/>2):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>points[(3<sp/>*<sp/>i)]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>points[(3<sp/>*<sp/>i)<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>points[(3<sp/>*<sp/>i)<sp/>+<sp/>2]</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>points[(3<sp/>*<sp/>i)<sp/>+<sp/>3]</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bezier_bx,<sp/>bezier_cx<sp/>=<sp/><ref refid="namespacecam_1_1parametric_1a02742565c1f1faf491c0d3d677dd33b6" kindref="member">derive_bezier_handles</ref>(a[0],<sp/>b[0],<sp/>c[0],<sp/>d[0],<sp/>1<sp/>/<sp/>3,<sp/>2<sp/>/<sp/>3)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bezier_by,<sp/>bezier_cy<sp/>=<sp/><ref refid="namespacecam_1_1parametric_1a02742565c1f1faf491c0d3d677dd33b6" kindref="member">derive_bezier_handles</ref>(a[1],<sp/>b[1],<sp/>c[1],<sp/>d[1],<sp/>1<sp/>/<sp/>3,<sp/>2<sp/>/<sp/>3)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bezier_bz,<sp/>bezier_cz<sp/>=<sp/><ref refid="namespacecam_1_1parametric_1a02742565c1f1faf491c0d3d677dd33b6" kindref="member">derive_bezier_handles</ref>(a[2],<sp/>b[2],<sp/>c[2],<sp/>d[2],<sp/>1<sp/>/<sp/>3,<sp/>2<sp/>/<sp/>3)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[(3<sp/>*<sp/>i)<sp/>+<sp/>1]<sp/>=<sp/>(bezier_bx,<sp/>bezier_by,<sp/>bezier_bz)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points[(3<sp/>*<sp/>i)<sp/>+<sp/>2]<sp/>=<sp/>(bezier_cx,<sp/>bezier_cy,<sp/>bezier_cz)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>point<sp/>coordinates<sp/>and<sp/>handles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iterations<sp/>+<sp/>1):</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spline.bezier_points[i].co<sp/>=<sp/>points[3<sp/>*<sp/>(i<sp/>+<sp/>1)]</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spline.bezier_points[i].handle_left_type<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;FREE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spline.bezier_points[i].handle_left<sp/>=<sp/>Vector(points[(3<sp/>*<sp/>(i<sp/>+<sp/>1))<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spline.bezier_points[i].handle_right_type<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;FREE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spline.bezier_points[i].handle_right<sp/>=<sp/>Vector(points[(3<sp/>*<sp/>(i<sp/>+<sp/>1))<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>=<sp/>[function(i<sp/>/<sp/>iterations,<sp/>*args,<sp/>**kwargs)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iterations<sp/>+<sp/>1)]</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>point<sp/>coordinates,<sp/>disable<sp/>handles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iterations<sp/>+<sp/>1):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spline.bezier_points[i].co<sp/>=<sp/>points[i]</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spline.bezier_points[i].handle_left_type<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;VECTOR&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spline.bezier_points[i].handle_right_type<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;VECTOR&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>Blender<sp/>object<sp/>and<sp/>link<sp/>it<sp/>to<sp/>the<sp/>scene</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>curve_object<sp/>=<sp/>bpy.data.objects.new(</highlight><highlight class="stringliteral">&apos;Parametric&apos;</highlight><highlight class="normal">,<sp/>curve)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>context<sp/>=<sp/>bpy.context</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>scene<sp/>=<sp/>context.scene</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>link_object<sp/>=<sp/>scene.collection.objects.link</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>link_object(curve_object)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>the<sp/>new<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curve_object</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="namespacecam_1_1parametric_1a4da15b36d0d2946dca1fa698a15e8259" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacecam_1_1parametric_1a4da15b36d0d2946dca1fa698a15e8259" kindref="member">make_edge_loops</ref>(*objects):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Turns<sp/>a<sp/>set<sp/>of<sp/>Curve<sp/>objects<sp/>into<sp/>meshes,<sp/>creates<sp/>vertex<sp/>groups,</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>merges<sp/>them<sp/>into<sp/>a<sp/>set<sp/>of<sp/>edge<sp/>loops.</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:param<sp/>*objects:</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Positional<sp/>arguments<sp/>for<sp/>each<sp/>object<sp/>to<sp/>be<sp/>converted<sp/>and<sp/>merged.</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>context<sp/>=<sp/>bpy.context</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>scene<sp/>=<sp/>context.scene</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh_objects<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>vertex_groups<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>all<sp/>curves<sp/>to<sp/>meshes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>obj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>objects:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Unlink<sp/>old<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlink_object(obj)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>curve<sp/>to<sp/>a<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bpy.app.version<sp/>&gt;=<sp/>(2,<sp/>80):</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_mesh<sp/>=<sp/>obj.to_mesh().copy()</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_mesh<sp/>=<sp/>obj.to_mesh(scene,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;PREVIEW&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Store<sp/>name<sp/>and<sp/>matrix,<sp/>then<sp/>fully<sp/>delete<sp/>the<sp/>old<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>obj.name</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>=<sp/>obj.matrix_world</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpy.data.objects.remove(obj)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Attach<sp/>the<sp/>new<sp/>mesh<sp/>to<sp/>a<sp/>new<sp/>object<sp/>with<sp/>the<sp/>old<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_object<sp/>=<sp/>bpy.data.objects.new(name,<sp/>new_mesh)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_object.matrix_world<sp/>=<sp/>matrix</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>a<sp/>new<sp/>vertex<sp/>group<sp/>from<sp/>all<sp/>vertices<sp/>on<sp/>this<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_group<sp/>=<sp/>new_object.vertex_groups.new(name=name)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_group.add(range(len(new_mesh.vertices)),<sp/>1.0,<sp/></highlight><highlight class="stringliteral">&apos;ADD&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex_groups.append(vertex_group)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Link<sp/>our<sp/>new<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link_object(new_object)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>it<sp/>to<sp/>our<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh_objects.append(new_object)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>a<sp/>new<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>context.copy()</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Select<sp/>our<sp/>objects<sp/>in<sp/>the<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx[</highlight><highlight class="stringliteral">&apos;active_object&apos;</highlight><highlight class="normal">]<sp/>=<sp/>mesh_objects[0]</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx[</highlight><highlight class="stringliteral">&apos;selected_objects&apos;</highlight><highlight class="normal">]<sp/>=<sp/>mesh_objects</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bpy.app.version<sp/>&gt;=<sp/>(2,<sp/>80):</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx[</highlight><highlight class="stringliteral">&apos;selected_editable_objects&apos;</highlight><highlight class="normal">]<sp/>=<sp/>mesh_objects</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx[</highlight><highlight class="stringliteral">&apos;selected_editable_bases&apos;</highlight><highlight class="normal">]<sp/>=<sp/>[scene.object_bases[o.name]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mesh_objects]</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Join<sp/>them<sp/>together</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>bpy.ops.object.join(ctx)</highlight></codeline>
    </programlisting>
    <location file="/tmp/github_repos_arch_doc_gen/SpectralVectors/blendercam/scripts/addons/cam/parametric.py"/>
  </compounddef>
</doxygen>
